{
  "version": 3,
  "sources": ["../../../../../node_modules/@angular/cdk/fesm2022/dialog.mjs", "../../../../../node_modules/@spartan-ng/ui-dialog-brain/fesm2022/spartan-ng-ui-dialog-brain.mjs"],
  "sourcesContent": ["import * as i1 from '@angular/cdk/a11y';\nimport { A11yModule } from '@angular/cdk/a11y';\nimport * as i1$1 from '@angular/cdk/overlay';\nimport { Overlay, OverlayConfig, OverlayRef, OverlayModule } from '@angular/cdk/overlay';\nimport { Platform, _getFocusedElementPierceShadowDom } from '@angular/cdk/platform';\nimport { BasePortalOutlet, CdkPortalOutlet, ComponentPortal, TemplatePortal, PortalModule } from '@angular/cdk/portal';\nimport { DOCUMENT } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { inject, ChangeDetectorRef, Component, ViewEncapsulation, ChangeDetectionStrategy, Optional, Inject, ViewChild, InjectionToken, Injector, TemplateRef, Injectable, SkipSelf, NgModule } from '@angular/core';\nimport { ESCAPE, hasModifierKey } from '@angular/cdk/keycodes';\nimport { Subject, defer, of } from 'rxjs';\nimport { Directionality } from '@angular/cdk/bidi';\nimport { startWith } from 'rxjs/operators';\n\n/** Configuration for opening a modal dialog. */\nfunction CdkDialogContainer_ng_template_0_Template(rf, ctx) {}\nclass DialogConfig {\n  constructor() {\n    /** The ARIA role of the dialog element. */\n    this.role = 'dialog';\n    /** Optional CSS class or classes applied to the overlay panel. */\n    this.panelClass = '';\n    /** Whether the dialog has a backdrop. */\n    this.hasBackdrop = true;\n    /** Optional CSS class or classes applied to the overlay backdrop. */\n    this.backdropClass = '';\n    /** Whether the dialog closes with the escape key or pointer events outside the panel element. */\n    this.disableClose = false;\n    /** Width of the dialog. */\n    this.width = '';\n    /** Height of the dialog. */\n    this.height = '';\n    /** Data being injected into the child component. */\n    this.data = null;\n    /** ID of the element that describes the dialog. */\n    this.ariaDescribedBy = null;\n    /** ID of the element that labels the dialog. */\n    this.ariaLabelledBy = null;\n    /** Dialog label applied via `aria-label` */\n    this.ariaLabel = null;\n    /** Whether this is a modal dialog. Used to set the `aria-modal` attribute. */\n    this.ariaModal = true;\n    /**\n     * Where the dialog should focus on open.\n     * @breaking-change 14.0.0 Remove boolean option from autoFocus. Use string or\n     * AutoFocusTarget instead.\n     */\n    this.autoFocus = 'first-tabbable';\n    /**\n     * Whether the dialog should restore focus to the previously-focused element upon closing.\n     * Has the following behavior based on the type that is passed in:\n     * - `boolean` - when true, will return focus to the element that was focused before the dialog\n     *    was opened, otherwise won't restore focus at all.\n     * - `string` - focus will be restored to the first element that matches the CSS selector.\n     * - `HTMLElement` - focus will be restored to the specific element.\n     */\n    this.restoreFocus = true;\n    /**\n     * Whether the dialog should close when the user navigates backwards or forwards through browser\n     * history. This does not apply to navigation via anchor element unless using URL-hash based\n     * routing (`HashLocationStrategy` in the Angular router).\n     */\n    this.closeOnNavigation = true;\n    /**\n     * Whether the dialog should close when the dialog service is destroyed. This is useful if\n     * another service is wrapping the dialog and is managing the destruction instead.\n     */\n    this.closeOnDestroy = true;\n    /**\n     * Whether the dialog should close when the underlying overlay is detached. This is useful if\n     * another service is wrapping the dialog and is managing the destruction instead. E.g. an\n     * external detachment can happen as a result of a scroll strategy triggering it or when the\n     * browser location changes.\n     */\n    this.closeOnOverlayDetachments = true;\n  }\n}\nfunction throwDialogContentAlreadyAttachedError() {\n  throw Error('Attempting to attach dialog content after content is already attached');\n}\n/**\n * Internal component that wraps user-provided dialog content.\n * @docs-private\n */\nclass CdkDialogContainer extends BasePortalOutlet {\n  constructor(_elementRef, _focusTrapFactory, _document, _config, _interactivityChecker, _ngZone, _overlayRef, _focusMonitor) {\n    super();\n    this._elementRef = _elementRef;\n    this._focusTrapFactory = _focusTrapFactory;\n    this._config = _config;\n    this._interactivityChecker = _interactivityChecker;\n    this._ngZone = _ngZone;\n    this._overlayRef = _overlayRef;\n    this._focusMonitor = _focusMonitor;\n    this._platform = inject(Platform);\n    /** The class that traps and manages focus within the dialog. */\n    this._focusTrap = null;\n    /** Element that was focused before the dialog was opened. Save this to restore upon close. */\n    this._elementFocusedBeforeDialogWasOpened = null;\n    /**\n     * Type of interaction that led to the dialog being closed. This is used to determine\n     * whether the focus style will be applied when returning focus to its original location\n     * after the dialog is closed.\n     */\n    this._closeInteractionType = null;\n    /**\n     * Queue of the IDs of the dialog's label element, based on their definition order. The first\n     * ID will be used as the `aria-labelledby` value. We use a queue here to handle the case\n     * where there are two or more titles in the DOM at a time and the first one is destroyed while\n     * the rest are present.\n     */\n    this._ariaLabelledByQueue = [];\n    this._changeDetectorRef = inject(ChangeDetectorRef);\n    /**\n     * Attaches a DOM portal to the dialog container.\n     * @param portal Portal to be attached.\n     * @deprecated To be turned into a method.\n     * @breaking-change 10.0.0\n     */\n    this.attachDomPortal = portal => {\n      if (this._portalOutlet.hasAttached() && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n        throwDialogContentAlreadyAttachedError();\n      }\n      const result = this._portalOutlet.attachDomPortal(portal);\n      this._contentAttached();\n      return result;\n    };\n    this._document = _document;\n    if (this._config.ariaLabelledBy) {\n      this._ariaLabelledByQueue.push(this._config.ariaLabelledBy);\n    }\n  }\n  _addAriaLabelledBy(id) {\n    this._ariaLabelledByQueue.push(id);\n    this._changeDetectorRef.markForCheck();\n  }\n  _removeAriaLabelledBy(id) {\n    const index = this._ariaLabelledByQueue.indexOf(id);\n    if (index > -1) {\n      this._ariaLabelledByQueue.splice(index, 1);\n      this._changeDetectorRef.markForCheck();\n    }\n  }\n  _contentAttached() {\n    this._initializeFocusTrap();\n    this._handleBackdropClicks();\n    this._captureInitialFocus();\n  }\n  /**\n   * Can be used by child classes to customize the initial focus\n   * capturing behavior (e.g. if it's tied to an animation).\n   */\n  _captureInitialFocus() {\n    this._trapFocus();\n  }\n  ngOnDestroy() {\n    this._restoreFocus();\n  }\n  /**\n   * Attach a ComponentPortal as content to this dialog container.\n   * @param portal Portal to be attached as the dialog content.\n   */\n  attachComponentPortal(portal) {\n    if (this._portalOutlet.hasAttached() && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n      throwDialogContentAlreadyAttachedError();\n    }\n    const result = this._portalOutlet.attachComponentPortal(portal);\n    this._contentAttached();\n    return result;\n  }\n  /**\n   * Attach a TemplatePortal as content to this dialog container.\n   * @param portal Portal to be attached as the dialog content.\n   */\n  attachTemplatePortal(portal) {\n    if (this._portalOutlet.hasAttached() && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n      throwDialogContentAlreadyAttachedError();\n    }\n    const result = this._portalOutlet.attachTemplatePortal(portal);\n    this._contentAttached();\n    return result;\n  }\n  // TODO(crisbeto): this shouldn't be exposed, but there are internal references to it.\n  /** Captures focus if it isn't already inside the dialog. */\n  _recaptureFocus() {\n    if (!this._containsFocus()) {\n      this._trapFocus();\n    }\n  }\n  /**\n   * Focuses the provided element. If the element is not focusable, it will add a tabIndex\n   * attribute to forcefully focus it. The attribute is removed after focus is moved.\n   * @param element The element to focus.\n   */\n  _forceFocus(element, options) {\n    if (!this._interactivityChecker.isFocusable(element)) {\n      element.tabIndex = -1;\n      // The tabindex attribute should be removed to avoid navigating to that element again\n      this._ngZone.runOutsideAngular(() => {\n        const callback = () => {\n          element.removeEventListener('blur', callback);\n          element.removeEventListener('mousedown', callback);\n          element.removeAttribute('tabindex');\n        };\n        element.addEventListener('blur', callback);\n        element.addEventListener('mousedown', callback);\n      });\n    }\n    element.focus(options);\n  }\n  /**\n   * Focuses the first element that matches the given selector within the focus trap.\n   * @param selector The CSS selector for the element to set focus to.\n   */\n  _focusByCssSelector(selector, options) {\n    let elementToFocus = this._elementRef.nativeElement.querySelector(selector);\n    if (elementToFocus) {\n      this._forceFocus(elementToFocus, options);\n    }\n  }\n  /**\n   * Moves the focus inside the focus trap. When autoFocus is not set to 'dialog', if focus\n   * cannot be moved then focus will go to the dialog container.\n   */\n  _trapFocus() {\n    const element = this._elementRef.nativeElement;\n    // If were to attempt to focus immediately, then the content of the dialog would not yet be\n    // ready in instances where change detection has to run first. To deal with this, we simply\n    // wait for the microtask queue to be empty when setting focus when autoFocus isn't set to\n    // dialog. If the element inside the dialog can't be focused, then the container is focused\n    // so the user can't tab into other elements behind it.\n    switch (this._config.autoFocus) {\n      case false:\n      case 'dialog':\n        // Ensure that focus is on the dialog container. It's possible that a different\n        // component tried to move focus while the open animation was running. See:\n        // https://github.com/angular/components/issues/16215. Note that we only want to do this\n        // if the focus isn't inside the dialog already, because it's possible that the consumer\n        // turned off `autoFocus` in order to move focus themselves.\n        if (!this._containsFocus()) {\n          element.focus();\n        }\n        break;\n      case true:\n      case 'first-tabbable':\n        this._focusTrap?.focusInitialElementWhenReady().then(focusedSuccessfully => {\n          // If we weren't able to find a focusable element in the dialog, then focus the dialog\n          // container instead.\n          if (!focusedSuccessfully) {\n            this._focusDialogContainer();\n          }\n        });\n        break;\n      case 'first-heading':\n        this._focusByCssSelector('h1, h2, h3, h4, h5, h6, [role=\"heading\"]');\n        break;\n      default:\n        this._focusByCssSelector(this._config.autoFocus);\n        break;\n    }\n  }\n  /** Restores focus to the element that was focused before the dialog opened. */\n  _restoreFocus() {\n    const focusConfig = this._config.restoreFocus;\n    let focusTargetElement = null;\n    if (typeof focusConfig === 'string') {\n      focusTargetElement = this._document.querySelector(focusConfig);\n    } else if (typeof focusConfig === 'boolean') {\n      focusTargetElement = focusConfig ? this._elementFocusedBeforeDialogWasOpened : null;\n    } else if (focusConfig) {\n      focusTargetElement = focusConfig;\n    }\n    // We need the extra check, because IE can set the `activeElement` to null in some cases.\n    if (this._config.restoreFocus && focusTargetElement && typeof focusTargetElement.focus === 'function') {\n      const activeElement = _getFocusedElementPierceShadowDom();\n      const element = this._elementRef.nativeElement;\n      // Make sure that focus is still inside the dialog or is on the body (usually because a\n      // non-focusable element like the backdrop was clicked) before moving it. It's possible that\n      // the consumer moved it themselves before the animation was done, in which case we shouldn't\n      // do anything.\n      if (!activeElement || activeElement === this._document.body || activeElement === element || element.contains(activeElement)) {\n        if (this._focusMonitor) {\n          this._focusMonitor.focusVia(focusTargetElement, this._closeInteractionType);\n          this._closeInteractionType = null;\n        } else {\n          focusTargetElement.focus();\n        }\n      }\n    }\n    if (this._focusTrap) {\n      this._focusTrap.destroy();\n    }\n  }\n  /** Focuses the dialog container. */\n  _focusDialogContainer() {\n    // Note that there is no focus method when rendering on the server.\n    if (this._elementRef.nativeElement.focus) {\n      this._elementRef.nativeElement.focus();\n    }\n  }\n  /** Returns whether focus is inside the dialog. */\n  _containsFocus() {\n    const element = this._elementRef.nativeElement;\n    const activeElement = _getFocusedElementPierceShadowDom();\n    return element === activeElement || element.contains(activeElement);\n  }\n  /** Sets up the focus trap. */\n  _initializeFocusTrap() {\n    if (this._platform.isBrowser) {\n      this._focusTrap = this._focusTrapFactory.create(this._elementRef.nativeElement);\n      // Save the previously focused element. This element will be re-focused\n      // when the dialog closes.\n      if (this._document) {\n        this._elementFocusedBeforeDialogWasOpened = _getFocusedElementPierceShadowDom();\n      }\n    }\n  }\n  /** Sets up the listener that handles clicks on the dialog backdrop. */\n  _handleBackdropClicks() {\n    // Clicking on the backdrop will move focus out of dialog.\n    // Recapture it if closing via the backdrop is disabled.\n    this._overlayRef.backdropClick().subscribe(() => {\n      if (this._config.disableClose) {\n        this._recaptureFocus();\n      }\n    });\n  }\n  static {\n    this.ɵfac = function CdkDialogContainer_Factory(t) {\n      return new (t || CdkDialogContainer)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i1.FocusTrapFactory), i0.ɵɵdirectiveInject(DOCUMENT, 8), i0.ɵɵdirectiveInject(DialogConfig), i0.ɵɵdirectiveInject(i1.InteractivityChecker), i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(i1$1.OverlayRef), i0.ɵɵdirectiveInject(i1.FocusMonitor));\n    };\n  }\n  static {\n    this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n      type: CdkDialogContainer,\n      selectors: [[\"cdk-dialog-container\"]],\n      viewQuery: function CdkDialogContainer_Query(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵviewQuery(CdkPortalOutlet, 7);\n        }\n        if (rf & 2) {\n          let _t;\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._portalOutlet = _t.first);\n        }\n      },\n      hostAttrs: [\"tabindex\", \"-1\", 1, \"cdk-dialog-container\"],\n      hostVars: 6,\n      hostBindings: function CdkDialogContainer_HostBindings(rf, ctx) {\n        if (rf & 2) {\n          i0.ɵɵattribute(\"id\", ctx._config.id || null)(\"role\", ctx._config.role)(\"aria-modal\", ctx._config.ariaModal)(\"aria-labelledby\", ctx._config.ariaLabel ? null : ctx._ariaLabelledByQueue[0])(\"aria-label\", ctx._config.ariaLabel)(\"aria-describedby\", ctx._config.ariaDescribedBy || null);\n        }\n      },\n      standalone: true,\n      features: [i0.ɵɵInheritDefinitionFeature, i0.ɵɵStandaloneFeature],\n      decls: 1,\n      vars: 0,\n      consts: [[\"cdkPortalOutlet\", \"\"]],\n      template: function CdkDialogContainer_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵtemplate(0, CdkDialogContainer_ng_template_0_Template, 0, 0, \"ng-template\", 0);\n        }\n      },\n      dependencies: [CdkPortalOutlet],\n      styles: [\".cdk-dialog-container{display:block;width:100%;height:100%;min-height:inherit;max-height:inherit}\"],\n      encapsulation: 2\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(CdkDialogContainer, [{\n    type: Component,\n    args: [{\n      selector: 'cdk-dialog-container',\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.Default,\n      standalone: true,\n      imports: [CdkPortalOutlet],\n      host: {\n        'class': 'cdk-dialog-container',\n        'tabindex': '-1',\n        '[attr.id]': '_config.id || null',\n        '[attr.role]': '_config.role',\n        '[attr.aria-modal]': '_config.ariaModal',\n        '[attr.aria-labelledby]': '_config.ariaLabel ? null : _ariaLabelledByQueue[0]',\n        '[attr.aria-label]': '_config.ariaLabel',\n        '[attr.aria-describedby]': '_config.ariaDescribedBy || null'\n      },\n      template: \"<ng-template cdkPortalOutlet />\\n\",\n      styles: [\".cdk-dialog-container{display:block;width:100%;height:100%;min-height:inherit;max-height:inherit}\"]\n    }]\n  }], () => [{\n    type: i0.ElementRef\n  }, {\n    type: i1.FocusTrapFactory\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Inject,\n      args: [DOCUMENT]\n    }]\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Inject,\n      args: [DialogConfig]\n    }]\n  }, {\n    type: i1.InteractivityChecker\n  }, {\n    type: i0.NgZone\n  }, {\n    type: i1$1.OverlayRef\n  }, {\n    type: i1.FocusMonitor\n  }], {\n    _portalOutlet: [{\n      type: ViewChild,\n      args: [CdkPortalOutlet, {\n        static: true\n      }]\n    }]\n  });\n})();\n\n/**\n * Reference to a dialog opened via the Dialog service.\n */\nclass DialogRef {\n  constructor(overlayRef, config) {\n    this.overlayRef = overlayRef;\n    this.config = config;\n    /** Emits when the dialog has been closed. */\n    this.closed = new Subject();\n    this.disableClose = config.disableClose;\n    this.backdropClick = overlayRef.backdropClick();\n    this.keydownEvents = overlayRef.keydownEvents();\n    this.outsidePointerEvents = overlayRef.outsidePointerEvents();\n    this.id = config.id; // By the time the dialog is created we are guaranteed to have an ID.\n    this.keydownEvents.subscribe(event => {\n      if (event.keyCode === ESCAPE && !this.disableClose && !hasModifierKey(event)) {\n        event.preventDefault();\n        this.close(undefined, {\n          focusOrigin: 'keyboard'\n        });\n      }\n    });\n    this.backdropClick.subscribe(() => {\n      if (!this.disableClose) {\n        this.close(undefined, {\n          focusOrigin: 'mouse'\n        });\n      }\n    });\n    this._detachSubscription = overlayRef.detachments().subscribe(() => {\n      // Check specifically for `false`, because we want `undefined` to be treated like `true`.\n      if (config.closeOnOverlayDetachments !== false) {\n        this.close();\n      }\n    });\n  }\n  /**\n   * Close the dialog.\n   * @param result Optional result to return to the dialog opener.\n   * @param options Additional options to customize the closing behavior.\n   */\n  close(result, options) {\n    if (this.containerInstance) {\n      const closedSubject = this.closed;\n      this.containerInstance._closeInteractionType = options?.focusOrigin || 'program';\n      // Drop the detach subscription first since it can be triggered by the\n      // `dispose` call and override the result of this closing sequence.\n      this._detachSubscription.unsubscribe();\n      this.overlayRef.dispose();\n      closedSubject.next(result);\n      closedSubject.complete();\n      this.componentInstance = this.containerInstance = null;\n    }\n  }\n  /** Updates the position of the dialog based on the current position strategy. */\n  updatePosition() {\n    this.overlayRef.updatePosition();\n    return this;\n  }\n  /**\n   * Updates the dialog's width and height.\n   * @param width New width of the dialog.\n   * @param height New height of the dialog.\n   */\n  updateSize(width = '', height = '') {\n    this.overlayRef.updateSize({\n      width,\n      height\n    });\n    return this;\n  }\n  /** Add a CSS class or an array of classes to the overlay pane. */\n  addPanelClass(classes) {\n    this.overlayRef.addPanelClass(classes);\n    return this;\n  }\n  /** Remove a CSS class or an array of classes from the overlay pane. */\n  removePanelClass(classes) {\n    this.overlayRef.removePanelClass(classes);\n    return this;\n  }\n}\n\n/** Injection token for the Dialog's ScrollStrategy. */\nconst DIALOG_SCROLL_STRATEGY = new InjectionToken('DialogScrollStrategy', {\n  providedIn: 'root',\n  factory: () => {\n    const overlay = inject(Overlay);\n    return () => overlay.scrollStrategies.block();\n  }\n});\n/** Injection token for the Dialog's Data. */\nconst DIALOG_DATA = new InjectionToken('DialogData');\n/** Injection token that can be used to provide default options for the dialog module. */\nconst DEFAULT_DIALOG_CONFIG = new InjectionToken('DefaultDialogConfig');\n/**\n * @docs-private\n * @deprecated No longer used. To be removed.\n * @breaking-change 19.0.0\n */\nfunction DIALOG_SCROLL_STRATEGY_PROVIDER_FACTORY(overlay) {\n  return () => overlay.scrollStrategies.block();\n}\n/**\n * @docs-private\n * @deprecated No longer used. To be removed.\n * @breaking-change 19.0.0\n */\nconst DIALOG_SCROLL_STRATEGY_PROVIDER = {\n  provide: DIALOG_SCROLL_STRATEGY,\n  deps: [Overlay],\n  useFactory: DIALOG_SCROLL_STRATEGY_PROVIDER_FACTORY\n};\n\n/** Unique id for the created dialog. */\nlet uniqueId = 0;\nclass Dialog {\n  /** Keeps track of the currently-open dialogs. */\n  get openDialogs() {\n    return this._parentDialog ? this._parentDialog.openDialogs : this._openDialogsAtThisLevel;\n  }\n  /** Stream that emits when a dialog has been opened. */\n  get afterOpened() {\n    return this._parentDialog ? this._parentDialog.afterOpened : this._afterOpenedAtThisLevel;\n  }\n  constructor(_overlay, _injector, _defaultOptions, _parentDialog, _overlayContainer, scrollStrategy) {\n    this._overlay = _overlay;\n    this._injector = _injector;\n    this._defaultOptions = _defaultOptions;\n    this._parentDialog = _parentDialog;\n    this._overlayContainer = _overlayContainer;\n    this._openDialogsAtThisLevel = [];\n    this._afterAllClosedAtThisLevel = new Subject();\n    this._afterOpenedAtThisLevel = new Subject();\n    this._ariaHiddenElements = new Map();\n    /**\n     * Stream that emits when all open dialog have finished closing.\n     * Will emit on subscribe if there are no open dialogs to begin with.\n     */\n    this.afterAllClosed = defer(() => this.openDialogs.length ? this._getAfterAllClosed() : this._getAfterAllClosed().pipe(startWith(undefined)));\n    this._scrollStrategy = scrollStrategy;\n  }\n  open(componentOrTemplateRef, config) {\n    const defaults = this._defaultOptions || new DialogConfig();\n    config = {\n      ...defaults,\n      ...config\n    };\n    config.id = config.id || `cdk-dialog-${uniqueId++}`;\n    if (config.id && this.getDialogById(config.id) && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n      throw Error(`Dialog with id \"${config.id}\" exists already. The dialog id must be unique.`);\n    }\n    const overlayConfig = this._getOverlayConfig(config);\n    const overlayRef = this._overlay.create(overlayConfig);\n    const dialogRef = new DialogRef(overlayRef, config);\n    const dialogContainer = this._attachContainer(overlayRef, dialogRef, config);\n    dialogRef.containerInstance = dialogContainer;\n    this._attachDialogContent(componentOrTemplateRef, dialogRef, dialogContainer, config);\n    // If this is the first dialog that we're opening, hide all the non-overlay content.\n    if (!this.openDialogs.length) {\n      this._hideNonDialogContentFromAssistiveTechnology();\n    }\n    this.openDialogs.push(dialogRef);\n    dialogRef.closed.subscribe(() => this._removeOpenDialog(dialogRef, true));\n    this.afterOpened.next(dialogRef);\n    return dialogRef;\n  }\n  /**\n   * Closes all of the currently-open dialogs.\n   */\n  closeAll() {\n    reverseForEach(this.openDialogs, dialog => dialog.close());\n  }\n  /**\n   * Finds an open dialog by its id.\n   * @param id ID to use when looking up the dialog.\n   */\n  getDialogById(id) {\n    return this.openDialogs.find(dialog => dialog.id === id);\n  }\n  ngOnDestroy() {\n    // Make one pass over all the dialogs that need to be untracked, but should not be closed. We\n    // want to stop tracking the open dialog even if it hasn't been closed, because the tracking\n    // determines when `aria-hidden` is removed from elements outside the dialog.\n    reverseForEach(this._openDialogsAtThisLevel, dialog => {\n      // Check for `false` specifically since we want `undefined` to be interpreted as `true`.\n      if (dialog.config.closeOnDestroy === false) {\n        this._removeOpenDialog(dialog, false);\n      }\n    });\n    // Make a second pass and close the remaining dialogs. We do this second pass in order to\n    // correctly dispatch the `afterAllClosed` event in case we have a mixed array of dialogs\n    // that should be closed and dialogs that should not.\n    reverseForEach(this._openDialogsAtThisLevel, dialog => dialog.close());\n    this._afterAllClosedAtThisLevel.complete();\n    this._afterOpenedAtThisLevel.complete();\n    this._openDialogsAtThisLevel = [];\n  }\n  /**\n   * Creates an overlay config from a dialog config.\n   * @param config The dialog configuration.\n   * @returns The overlay configuration.\n   */\n  _getOverlayConfig(config) {\n    const state = new OverlayConfig({\n      positionStrategy: config.positionStrategy || this._overlay.position().global().centerHorizontally().centerVertically(),\n      scrollStrategy: config.scrollStrategy || this._scrollStrategy(),\n      panelClass: config.panelClass,\n      hasBackdrop: config.hasBackdrop,\n      direction: config.direction,\n      minWidth: config.minWidth,\n      minHeight: config.minHeight,\n      maxWidth: config.maxWidth,\n      maxHeight: config.maxHeight,\n      width: config.width,\n      height: config.height,\n      disposeOnNavigation: config.closeOnNavigation\n    });\n    if (config.backdropClass) {\n      state.backdropClass = config.backdropClass;\n    }\n    return state;\n  }\n  /**\n   * Attaches a dialog container to a dialog's already-created overlay.\n   * @param overlay Reference to the dialog's underlying overlay.\n   * @param config The dialog configuration.\n   * @returns A promise resolving to a ComponentRef for the attached container.\n   */\n  _attachContainer(overlay, dialogRef, config) {\n    const userInjector = config.injector || config.viewContainerRef?.injector;\n    const providers = [{\n      provide: DialogConfig,\n      useValue: config\n    }, {\n      provide: DialogRef,\n      useValue: dialogRef\n    }, {\n      provide: OverlayRef,\n      useValue: overlay\n    }];\n    let containerType;\n    if (config.container) {\n      if (typeof config.container === 'function') {\n        containerType = config.container;\n      } else {\n        containerType = config.container.type;\n        providers.push(...config.container.providers(config));\n      }\n    } else {\n      containerType = CdkDialogContainer;\n    }\n    const containerPortal = new ComponentPortal(containerType, config.viewContainerRef, Injector.create({\n      parent: userInjector || this._injector,\n      providers\n    }), config.componentFactoryResolver);\n    const containerRef = overlay.attach(containerPortal);\n    return containerRef.instance;\n  }\n  /**\n   * Attaches the user-provided component to the already-created dialog container.\n   * @param componentOrTemplateRef The type of component being loaded into the dialog,\n   *     or a TemplateRef to instantiate as the content.\n   * @param dialogRef Reference to the dialog being opened.\n   * @param dialogContainer Component that is going to wrap the dialog content.\n   * @param config Configuration used to open the dialog.\n   */\n  _attachDialogContent(componentOrTemplateRef, dialogRef, dialogContainer, config) {\n    if (componentOrTemplateRef instanceof TemplateRef) {\n      const injector = this._createInjector(config, dialogRef, dialogContainer, undefined);\n      let context = {\n        $implicit: config.data,\n        dialogRef\n      };\n      if (config.templateContext) {\n        context = {\n          ...context,\n          ...(typeof config.templateContext === 'function' ? config.templateContext() : config.templateContext)\n        };\n      }\n      dialogContainer.attachTemplatePortal(new TemplatePortal(componentOrTemplateRef, null, context, injector));\n    } else {\n      const injector = this._createInjector(config, dialogRef, dialogContainer, this._injector);\n      const contentRef = dialogContainer.attachComponentPortal(new ComponentPortal(componentOrTemplateRef, config.viewContainerRef, injector, config.componentFactoryResolver));\n      dialogRef.componentRef = contentRef;\n      dialogRef.componentInstance = contentRef.instance;\n    }\n  }\n  /**\n   * Creates a custom injector to be used inside the dialog. This allows a component loaded inside\n   * of a dialog to close itself and, optionally, to return a value.\n   * @param config Config object that is used to construct the dialog.\n   * @param dialogRef Reference to the dialog being opened.\n   * @param dialogContainer Component that is going to wrap the dialog content.\n   * @param fallbackInjector Injector to use as a fallback when a lookup fails in the custom\n   * dialog injector, if the user didn't provide a custom one.\n   * @returns The custom injector that can be used inside the dialog.\n   */\n  _createInjector(config, dialogRef, dialogContainer, fallbackInjector) {\n    const userInjector = config.injector || config.viewContainerRef?.injector;\n    const providers = [{\n      provide: DIALOG_DATA,\n      useValue: config.data\n    }, {\n      provide: DialogRef,\n      useValue: dialogRef\n    }];\n    if (config.providers) {\n      if (typeof config.providers === 'function') {\n        providers.push(...config.providers(dialogRef, config, dialogContainer));\n      } else {\n        providers.push(...config.providers);\n      }\n    }\n    if (config.direction && (!userInjector || !userInjector.get(Directionality, null, {\n      optional: true\n    }))) {\n      providers.push({\n        provide: Directionality,\n        useValue: {\n          value: config.direction,\n          change: of()\n        }\n      });\n    }\n    return Injector.create({\n      parent: userInjector || fallbackInjector,\n      providers\n    });\n  }\n  /**\n   * Removes a dialog from the array of open dialogs.\n   * @param dialogRef Dialog to be removed.\n   * @param emitEvent Whether to emit an event if this is the last dialog.\n   */\n  _removeOpenDialog(dialogRef, emitEvent) {\n    const index = this.openDialogs.indexOf(dialogRef);\n    if (index > -1) {\n      this.openDialogs.splice(index, 1);\n      // If all the dialogs were closed, remove/restore the `aria-hidden`\n      // to a the siblings and emit to the `afterAllClosed` stream.\n      if (!this.openDialogs.length) {\n        this._ariaHiddenElements.forEach((previousValue, element) => {\n          if (previousValue) {\n            element.setAttribute('aria-hidden', previousValue);\n          } else {\n            element.removeAttribute('aria-hidden');\n          }\n        });\n        this._ariaHiddenElements.clear();\n        if (emitEvent) {\n          this._getAfterAllClosed().next();\n        }\n      }\n    }\n  }\n  /** Hides all of the content that isn't an overlay from assistive technology. */\n  _hideNonDialogContentFromAssistiveTechnology() {\n    const overlayContainer = this._overlayContainer.getContainerElement();\n    // Ensure that the overlay container is attached to the DOM.\n    if (overlayContainer.parentElement) {\n      const siblings = overlayContainer.parentElement.children;\n      for (let i = siblings.length - 1; i > -1; i--) {\n        const sibling = siblings[i];\n        if (sibling !== overlayContainer && sibling.nodeName !== 'SCRIPT' && sibling.nodeName !== 'STYLE' && !sibling.hasAttribute('aria-live')) {\n          this._ariaHiddenElements.set(sibling, sibling.getAttribute('aria-hidden'));\n          sibling.setAttribute('aria-hidden', 'true');\n        }\n      }\n    }\n  }\n  _getAfterAllClosed() {\n    const parent = this._parentDialog;\n    return parent ? parent._getAfterAllClosed() : this._afterAllClosedAtThisLevel;\n  }\n  static {\n    this.ɵfac = function Dialog_Factory(t) {\n      return new (t || Dialog)(i0.ɵɵinject(i1$1.Overlay), i0.ɵɵinject(i0.Injector), i0.ɵɵinject(DEFAULT_DIALOG_CONFIG, 8), i0.ɵɵinject(Dialog, 12), i0.ɵɵinject(i1$1.OverlayContainer), i0.ɵɵinject(DIALOG_SCROLL_STRATEGY));\n    };\n  }\n  static {\n    this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n      token: Dialog,\n      factory: Dialog.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(Dialog, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], () => [{\n    type: i1$1.Overlay\n  }, {\n    type: i0.Injector\n  }, {\n    type: DialogConfig,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Inject,\n      args: [DEFAULT_DIALOG_CONFIG]\n    }]\n  }, {\n    type: Dialog,\n    decorators: [{\n      type: Optional\n    }, {\n      type: SkipSelf\n    }]\n  }, {\n    type: i1$1.OverlayContainer\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Inject,\n      args: [DIALOG_SCROLL_STRATEGY]\n    }]\n  }], null);\n})();\n/**\n * Executes a callback against all elements in an array while iterating in reverse.\n * Useful if the array is being modified as it is being iterated.\n */\nfunction reverseForEach(items, callback) {\n  let i = items.length;\n  while (i--) {\n    callback(items[i]);\n  }\n}\nclass DialogModule {\n  static {\n    this.ɵfac = function DialogModule_Factory(t) {\n      return new (t || DialogModule)();\n    };\n  }\n  static {\n    this.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n      type: DialogModule,\n      imports: [OverlayModule, PortalModule, A11yModule, CdkDialogContainer],\n      exports: [\n      // Re-export the PortalModule so that people extending the `CdkDialogContainer`\n      // don't have to remember to import it or be faced with an unhelpful error.\n      PortalModule, CdkDialogContainer]\n    });\n  }\n  static {\n    this.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n      providers: [Dialog],\n      imports: [OverlayModule, PortalModule, A11yModule,\n      // Re-export the PortalModule so that people extending the `CdkDialogContainer`\n      // don't have to remember to import it or be faced with an unhelpful error.\n      PortalModule]\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(DialogModule, [{\n    type: NgModule,\n    args: [{\n      imports: [OverlayModule, PortalModule, A11yModule, CdkDialogContainer],\n      exports: [\n      // Re-export the PortalModule so that people extending the `CdkDialogContainer`\n      // don't have to remember to import it or be faced with an unhelpful error.\n      PortalModule, CdkDialogContainer],\n      providers: [Dialog]\n    }]\n  }], null, null);\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { CdkDialogContainer, DEFAULT_DIALOG_CONFIG, DIALOG_DATA, DIALOG_SCROLL_STRATEGY, DIALOG_SCROLL_STRATEGY_PROVIDER, DIALOG_SCROLL_STRATEGY_PROVIDER_FACTORY, Dialog, DialogConfig, DialogModule, DialogRef, throwDialogContentAlreadyAttachedError };\n", "import * as i0 from '@angular/core';\nimport { inject, RendererFactory2, Injector, signal, computed, runInInjectionContext, effect, Injectable, Directive, Input, ViewContainerRef, EventEmitter, booleanAttribute, numberAttribute, Component, ChangeDetectionStrategy, ViewEncapsulation, Output, TemplateRef, input, NgModule } from '@angular/core';\nimport { coerceNumberProperty } from '@angular/cdk/coercion';\nimport { Subject, takeUntil, filter, take } from 'rxjs';\nimport { DIALOG_DATA, Dialog } from '@angular/cdk/dialog';\nimport { OverlayPositionBuilder, ScrollStrategyOptions } from '@angular/cdk/overlay';\nimport { provideExposesStateProviderExisting, provideCustomClassSettableExisting } from '@spartan-ng/ui-core';\nconst _c0 = [\"*\"];\nlet dialogSequence = 0;\nconst cssClassesToArray = (classes, defaultClass = '') => {\n  if (typeof classes === 'string') {\n    const splitClasses = classes.trim().split(' ');\n    if (splitClasses.length === 0) {\n      return [defaultClass];\n    }\n    return splitClasses;\n  }\n  return classes ?? [];\n};\n/** @deprecated `injectBrnDialogCtx` will no longer be supported once components are stable. Use `injectBrnDialogContext` instead.  */\nconst injectBrnDialogCtx = () => {\n  return inject(DIALOG_DATA);\n};\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nconst injectBrnDialogContext = (options = {}) => {\n  return inject(DIALOG_DATA, options);\n};\nclass BrnDialogService {\n  constructor() {\n    this._cdkDialog = inject(Dialog);\n    this._rendererFactory = inject(RendererFactory2);\n    this._renderer = this._rendererFactory.createRenderer(null, null);\n    this._positionBuilder = inject(OverlayPositionBuilder);\n    this._sso = inject(ScrollStrategyOptions);\n    this._injector = inject(Injector);\n  }\n  open(content, vcr, context, options) {\n    if (options?.id && this._cdkDialog.getDialogById(options.id)) {\n      throw new Error(`Dialog with ID: ${options.id} already exists`);\n    }\n    const positionStrategy = options?.positionStrategy ?? (options?.attachTo && options?.attachPositions && options?.attachPositions?.length > 0 ? this._positionBuilder?.flexibleConnectedTo(options.attachTo).withPositions(options.attachPositions ?? []) : this._positionBuilder.global().centerHorizontally().centerVertically());\n    let brnDialogRef;\n    let effectRef;\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    const contextOrData = {\n      ...context,\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      close: (result = undefined) => brnDialogRef.close(result, options?.closeDelay)\n    };\n    const destroyed$ = new Subject();\n    const open = signal(true);\n    const state = computed(() => open() ? 'open' : 'closed');\n    const dialogId = dialogSequence++;\n    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n    // @ts-ignore\n    const cdkDialogRef = this._cdkDialog.open(content, {\n      id: options?.id ?? `brn-dialog-${dialogId}`,\n      role: options?.role,\n      viewContainerRef: vcr,\n      templateContext: () => ({\n        $implicit: contextOrData\n      }),\n      data: contextOrData,\n      hasBackdrop: options?.hasBackdrop,\n      panelClass: cssClassesToArray(options?.panelClass),\n      backdropClass: cssClassesToArray(options?.backdropClass, 'bg-transparent'),\n      positionStrategy,\n      scrollStrategy: options?.scrollStrategy ?? this._sso?.block(),\n      restoreFocus: options?.restoreFocus,\n      disableClose: true,\n      autoFocus: options?.autoFocus ?? 'first-tabbable',\n      ariaDescribedBy: options?.ariaDescribedBy ?? `brn-dialog-description-${dialogId}`,\n      ariaLabelledBy: options?.ariaLabelledBy ?? `brn-dialog-title-${dialogId}`,\n      ariaLabel: options?.ariaLabel,\n      ariaModal: options?.ariaModal,\n      providers: cdkDialogRef => {\n        brnDialogRef = new BrnDialogRef(cdkDialogRef, open, state, dialogId, options);\n        runInInjectionContext(this._injector, () => {\n          effectRef = effect(() => {\n            if (overlay) {\n              this._renderer.setAttribute(overlay, 'data-state', state());\n            }\n            if (backdrop) {\n              this._renderer.setAttribute(backdrop, 'data-state', state());\n            }\n          });\n        });\n        const providers = [{\n          provide: BrnDialogRef,\n          useValue: brnDialogRef\n        }];\n        if (options?.providers) {\n          if (typeof options.providers === 'function') {\n            providers.push(...options.providers());\n          }\n          if (Array.isArray(options.providers)) {\n            providers.push(...options.providers);\n          }\n        }\n        return providers;\n      }\n    });\n    const overlay = cdkDialogRef.overlayRef.overlayElement;\n    const backdrop = cdkDialogRef.overlayRef.backdropElement;\n    if (options?.closeOnOutsidePointerEvents) {\n      cdkDialogRef.outsidePointerEvents.pipe(takeUntil(destroyed$)).subscribe(() => {\n        brnDialogRef.close(undefined, options?.closeDelay);\n      });\n    }\n    if (options?.closeOnBackdropClick) {\n      cdkDialogRef.backdropClick.pipe(takeUntil(destroyed$)).subscribe(() => {\n        brnDialogRef.close(undefined, options?.closeDelay);\n      });\n    }\n    if (!options?.disableClose) {\n      cdkDialogRef.keydownEvents.pipe(filter(e => e.key === 'Escape'), takeUntil(destroyed$)).subscribe(() => {\n        brnDialogRef.close(undefined, options?.closeDelay);\n      });\n    }\n    cdkDialogRef.closed.pipe(takeUntil(destroyed$)).subscribe(() => {\n      effectRef?.destroy();\n      destroyed$.next();\n    });\n    return brnDialogRef;\n  }\n  static {\n    this.ɵfac = function BrnDialogService_Factory(t) {\n      return new (t || BrnDialogService)();\n    };\n  }\n  static {\n    this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n      token: BrnDialogService,\n      factory: BrnDialogService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(BrnDialogService, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], null, null);\n})();\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nclass BrnDialogRef {\n  get open() {\n    return this.state() === 'open';\n  }\n  constructor(_cdkDialogRef, _open, state, dialogId, _options) {\n    this._cdkDialogRef = _cdkDialogRef;\n    this._open = _open;\n    this.state = state;\n    this.dialogId = dialogId;\n    this._options = _options;\n    this._closing$ = new Subject();\n    this.closing$ = this._closing$.asObservable();\n    this.closed$ = this._cdkDialogRef.closed.pipe(take(1));\n  }\n  close(result, delay = this._options?.closeDelay ?? 0) {\n    if (!this.open || this._options?.disableClose) return;\n    this._closing$.next();\n    this._open.set(false);\n    if (this._previousTimeout) {\n      clearTimeout(this._previousTimeout);\n    }\n    this._previousTimeout = setTimeout(() => {\n      this._cdkDialogRef.close(result);\n    }, delay);\n  }\n  setPanelClass(paneClass) {\n    this._cdkDialogRef.config.panelClass = cssClassesToArray(paneClass);\n  }\n  setOverlayClass(overlayClass) {\n    this._cdkDialogRef.config.backdropClass = cssClassesToArray(overlayClass);\n  }\n  setAriaDescribedBy(ariaDescribedBy) {\n    this._cdkDialogRef.config.ariaDescribedBy = ariaDescribedBy;\n  }\n  setAriaLabelledBy(ariaLabelledBy) {\n    this._cdkDialogRef.config.ariaLabelledBy = ariaLabelledBy;\n  }\n  setAriaLabel(ariaLabel) {\n    this._cdkDialogRef.config.ariaLabel = ariaLabel;\n  }\n}\nclass BrnDialogCloseDirective {\n  constructor() {\n    this._brnDialogRef = inject(BrnDialogRef);\n  }\n  set delay(value) {\n    this._delay = coerceNumberProperty(value);\n  }\n  close() {\n    this._brnDialogRef.close(undefined, this._delay);\n  }\n  static {\n    this.ɵfac = function BrnDialogCloseDirective_Factory(t) {\n      return new (t || BrnDialogCloseDirective)();\n    };\n  }\n  static {\n    this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: BrnDialogCloseDirective,\n      selectors: [[\"button\", \"brnDialogClose\", \"\"]],\n      hostBindings: function BrnDialogCloseDirective_HostBindings(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵlistener(\"click\", function BrnDialogCloseDirective_click_HostBindingHandler() {\n            return ctx.close();\n          });\n        }\n      },\n      inputs: {\n        delay: \"delay\"\n      },\n      standalone: true\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(BrnDialogCloseDirective, [{\n    type: Directive,\n    args: [{\n      selector: 'button[brnDialogClose]',\n      standalone: true,\n      host: {\n        '(click)': 'close()'\n      }\n    }]\n  }], null, {\n    delay: [{\n      type: Input\n    }]\n  });\n})();\nconst DEFAULT_BRN_DIALOG_OPTIONS = {\n  role: 'dialog',\n  attachPositions: [],\n  attachTo: null,\n  autoFocus: 'first-tabbable',\n  backdropClass: '',\n  closeDelay: 0,\n  closeOnBackdropClick: true,\n  closeOnOutsidePointerEvents: false,\n  hasBackdrop: true,\n  panelClass: '',\n  positionStrategy: null,\n  restoreFocus: true,\n  scrollStrategy: null,\n  disableClose: false,\n  ariaLabel: undefined,\n  ariaModal: true\n};\nclass BrnDialogComponent {\n  constructor() {\n    this._dialogService = inject(BrnDialogService);\n    this._vcr = inject(ViewContainerRef);\n    this.positionBuilder = inject(OverlayPositionBuilder);\n    this.ssos = inject(ScrollStrategyOptions);\n    this._injector = inject(Injector);\n    this._context = {};\n    this._options = {\n      ...DEFAULT_BRN_DIALOG_OPTIONS\n    };\n    this._dialogRef = signal(undefined);\n    this.state = computed(() => this._dialogRef()?.state() ?? 'closed');\n    this.closed = new EventEmitter();\n    this.stateChanged = new EventEmitter();\n  }\n  // eslint-disable-next-line @angular-eslint/no-input-rename\n  set newState(state) {\n    if (state === 'open') {\n      this.open();\n    }\n    if (state === 'closed') {\n      this.close(this._options['closeDelay']);\n    }\n  }\n  set role(role) {\n    this._options['role'] = role;\n  }\n  set hasBackdrop(hasBackdrop) {\n    this._options['hasBackdrop'] = hasBackdrop;\n  }\n  set positionStrategy(positionStrategy) {\n    this._options['positionStrategy'] = positionStrategy;\n  }\n  set scrollStrategy(scrollStrategy) {\n    if (scrollStrategy === 'close') {\n      this._options['scrollStrategy'] = this.ssos.close();\n    } else if (scrollStrategy === 'reposition') {\n      this._options['scrollStrategy'] = this.ssos.reposition();\n    } else {\n      this._options['scrollStrategy'] = scrollStrategy;\n    }\n  }\n  set restoreFocus(restoreFocus) {\n    this._options['restoreFocus'] = restoreFocus;\n  }\n  set closeOnOutsidePointerEvents(closeOnOutsidePointerEvents) {\n    this._options['closeOnOutsidePointerEvents'] = closeOnOutsidePointerEvents;\n  }\n  set closeOnBackdropClick(closeOnBackdropClick) {\n    this._options['closeOnBackdropClick'] = closeOnBackdropClick;\n  }\n  set attachTo(attachTo) {\n    this._options['attachTo'] = attachTo;\n  }\n  set attachPositions(attachPositions) {\n    this._options['attachPositions'] = attachPositions;\n  }\n  set autoFocus(autoFocus) {\n    this._options['autoFocus'] = autoFocus;\n  }\n  set closeDelay(closeDelay) {\n    this._options['closeDelay'] = closeDelay;\n  }\n  set disableClose(disableClose) {\n    this._options['disableClose'] = disableClose;\n  }\n  /* eslint-disable-next-line @angular-eslint/no-input-rename */\n  set ariaDescribedBy(ariaDescribedBy) {\n    this.setAriaDescribedBy(ariaDescribedBy);\n  }\n  /* eslint-disable-next-line @angular-eslint/no-input-rename */\n  set ariaLabelledBy(ariaLabelledBy) {\n    this.setAriaLabelledBy(ariaLabelledBy);\n  }\n  /* eslint-disable-next-line @angular-eslint/no-input-rename */\n  set ariaLabel(ariaLabel) {\n    this.setAriaLabel(ariaLabel);\n  }\n  /* eslint-disable-next-line @angular-eslint/no-input-rename */\n  set ariaModal(isModal) {\n    this.setAriaModal(isModal);\n  }\n  open() {\n    if (!this._contentTemplate || this._dialogRef()) return;\n    this._dialogStateEffectRef?.destroy();\n    const dialogRef = this._dialogService.open(this._contentTemplate, this._vcr, this._context, this._options);\n    this._dialogRef.set(dialogRef);\n    runInInjectionContext(this._injector, () => {\n      this._dialogStateEffectRef = effect(() => this.stateChanged.emit(dialogRef.state()));\n    });\n    dialogRef.closed$.pipe(take(1)).subscribe(result => {\n      this._dialogRef.set(undefined);\n      this.closed.emit(result);\n    });\n  }\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  close(result, delay) {\n    this._dialogRef()?.close(result, delay ?? this._options.closeDelay);\n  }\n  registerTemplate(template) {\n    this._contentTemplate = template;\n  }\n  setOverlayClass(overlayClass) {\n    this._options['backdropClass'] = overlayClass ?? '';\n    this._dialogRef()?.setOverlayClass(overlayClass);\n  }\n  setPanelClass(panelClass) {\n    this._options['panelClass'] = panelClass ?? '';\n    this._dialogRef()?.setPanelClass(panelClass);\n  }\n  setContext(context) {\n    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n    // @ts-expect-error\n    this._context = {\n      ...this._context,\n      ...context\n    };\n  }\n  setAriaDescribedBy(ariaDescribedBy) {\n    this._options = {\n      ...this._options,\n      ariaDescribedBy\n    };\n    this._dialogRef()?.setAriaDescribedBy(ariaDescribedBy);\n  }\n  setAriaLabelledBy(ariaLabelledBy) {\n    this._options = {\n      ...this._options,\n      ariaLabelledBy\n    };\n    this._dialogRef()?.setAriaLabelledBy(ariaLabelledBy);\n  }\n  setAriaLabel(ariaLabel) {\n    this._options = {\n      ...this._options,\n      ariaLabel\n    };\n    this._dialogRef()?.setAriaLabel(ariaLabel);\n  }\n  setAriaModal(ariaModal) {\n    this._options = {\n      ...this._options,\n      ariaModal\n    };\n  }\n  static {\n    this.ɵfac = function BrnDialogComponent_Factory(t) {\n      return new (t || BrnDialogComponent)();\n    };\n  }\n  static {\n    this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n      type: BrnDialogComponent,\n      selectors: [[\"brn-dialog\"]],\n      inputs: {\n        newState: [i0.ɵɵInputFlags.None, \"state\", \"newState\"],\n        role: \"role\",\n        hasBackdrop: [i0.ɵɵInputFlags.HasDecoratorInputTransform, \"hasBackdrop\", \"hasBackdrop\", booleanAttribute],\n        positionStrategy: \"positionStrategy\",\n        scrollStrategy: \"scrollStrategy\",\n        restoreFocus: \"restoreFocus\",\n        closeOnOutsidePointerEvents: [i0.ɵɵInputFlags.HasDecoratorInputTransform, \"closeOnOutsidePointerEvents\", \"closeOnOutsidePointerEvents\", booleanAttribute],\n        closeOnBackdropClick: [i0.ɵɵInputFlags.HasDecoratorInputTransform, \"closeOnBackdropClick\", \"closeOnBackdropClick\", booleanAttribute],\n        attachTo: \"attachTo\",\n        attachPositions: \"attachPositions\",\n        autoFocus: \"autoFocus\",\n        closeDelay: [i0.ɵɵInputFlags.HasDecoratorInputTransform, \"closeDelay\", \"closeDelay\", numberAttribute],\n        disableClose: [i0.ɵɵInputFlags.HasDecoratorInputTransform, \"disableClose\", \"disableClose\", booleanAttribute],\n        ariaDescribedBy: [i0.ɵɵInputFlags.None, \"aria-describedby\", \"ariaDescribedBy\"],\n        ariaLabelledBy: [i0.ɵɵInputFlags.None, \"aria-labelledby\", \"ariaLabelledBy\"],\n        ariaLabel: [i0.ɵɵInputFlags.None, \"aria-label\", \"ariaLabel\"],\n        ariaModal: [i0.ɵɵInputFlags.HasDecoratorInputTransform, \"aria-modal\", \"ariaModal\", booleanAttribute]\n      },\n      outputs: {\n        closed: \"closed\",\n        stateChanged: \"stateChanged\"\n      },\n      exportAs: [\"brnDialog\"],\n      standalone: true,\n      features: [i0.ɵɵInputTransformsFeature, i0.ɵɵStandaloneFeature],\n      ngContentSelectors: _c0,\n      decls: 1,\n      vars: 0,\n      template: function BrnDialogComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵprojectionDef();\n          i0.ɵɵprojection(0);\n        }\n      },\n      encapsulation: 2,\n      changeDetection: 0\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(BrnDialogComponent, [{\n    type: Component,\n    args: [{\n      selector: 'brn-dialog',\n      standalone: true,\n      template: `\n\t\t<ng-content />\n\t`,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None,\n      exportAs: 'brnDialog'\n    }]\n  }], null, {\n    closed: [{\n      type: Output\n    }],\n    stateChanged: [{\n      type: Output\n    }],\n    newState: [{\n      type: Input,\n      args: ['state']\n    }],\n    role: [{\n      type: Input\n    }],\n    hasBackdrop: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    positionStrategy: [{\n      type: Input\n    }],\n    scrollStrategy: [{\n      type: Input\n    }],\n    restoreFocus: [{\n      type: Input\n    }],\n    closeOnOutsidePointerEvents: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    closeOnBackdropClick: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    attachTo: [{\n      type: Input\n    }],\n    attachPositions: [{\n      type: Input\n    }],\n    autoFocus: [{\n      type: Input\n    }],\n    closeDelay: [{\n      type: Input,\n      args: [{\n        transform: numberAttribute\n      }]\n    }],\n    disableClose: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    ariaDescribedBy: [{\n      type: Input,\n      args: ['aria-describedby']\n    }],\n    ariaLabelledBy: [{\n      type: Input,\n      args: ['aria-labelledby']\n    }],\n    ariaLabel: [{\n      type: Input,\n      args: ['aria-label']\n    }],\n    ariaModal: [{\n      type: Input,\n      args: [{\n        alias: 'aria-modal',\n        transform: booleanAttribute\n      }]\n    }]\n  });\n})();\nclass BrnDialogContentDirective {\n  constructor() {\n    this._brnDialog = inject(BrnDialogComponent, {\n      optional: true\n    });\n    this._brnDialogRef = inject(BrnDialogRef, {\n      optional: true\n    });\n    this._template = inject(TemplateRef);\n    this.state = computed(() => this._brnDialog?.state() ?? this._brnDialogRef?.state() ?? 'closed');\n    if (!this._brnDialog) return;\n    this._brnDialog.registerTemplate(this._template);\n  }\n  set class(newClass) {\n    if (!this._brnDialog) return;\n    this._brnDialog.setPanelClass(newClass);\n  }\n  set context(context) {\n    if (!this._brnDialog) return;\n    this._brnDialog.setContext(context);\n  }\n  static {\n    this.ɵfac = function BrnDialogContentDirective_Factory(t) {\n      return new (t || BrnDialogContentDirective)();\n    };\n  }\n  static {\n    this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: BrnDialogContentDirective,\n      selectors: [[\"\", \"brnDialogContent\", \"\"]],\n      inputs: {\n        class: \"class\",\n        context: \"context\"\n      },\n      standalone: true,\n      features: [i0.ɵɵProvidersFeature([provideExposesStateProviderExisting(() => BrnDialogContentDirective)])]\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(BrnDialogContentDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[brnDialogContent]',\n      standalone: true,\n      providers: [provideExposesStateProviderExisting(() => BrnDialogContentDirective)]\n    }]\n  }], () => [], {\n    class: [{\n      type: Input\n    }],\n    context: [{\n      type: Input\n    }]\n  });\n})();\nclass BrnDialogDescriptionDirective {\n  constructor() {\n    this._brnDialogRef = inject(BrnDialogRef);\n    this._id = signal(`brn-dialog-description-${this._brnDialogRef?.dialogId}`);\n    effect(() => {\n      this._brnDialogRef.setAriaDescribedBy(this._id());\n    });\n  }\n  static {\n    this.ɵfac = function BrnDialogDescriptionDirective_Factory(t) {\n      return new (t || BrnDialogDescriptionDirective)();\n    };\n  }\n  static {\n    this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: BrnDialogDescriptionDirective,\n      selectors: [[\"\", \"brnDialogDescription\", \"\"]],\n      hostVars: 1,\n      hostBindings: function BrnDialogDescriptionDirective_HostBindings(rf, ctx) {\n        if (rf & 2) {\n          i0.ɵɵhostProperty(\"id\", ctx._id());\n        }\n      },\n      standalone: true\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(BrnDialogDescriptionDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[brnDialogDescription]',\n      standalone: true,\n      host: {\n        '[id]': '_id()'\n      }\n    }]\n  }], () => [], null);\n})();\nclass BrnDialogOverlayComponent {\n  constructor() {\n    this._brnDialog = inject(BrnDialogComponent);\n  }\n  set class(newClass) {\n    this._brnDialog.setOverlayClass(newClass);\n  }\n  setClassToCustomElement(newClass) {\n    this._brnDialog.setOverlayClass(newClass);\n  }\n  static {\n    this.ɵfac = function BrnDialogOverlayComponent_Factory(t) {\n      return new (t || BrnDialogOverlayComponent)();\n    };\n  }\n  static {\n    this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n      type: BrnDialogOverlayComponent,\n      selectors: [[\"brn-dialog-overlay\"]],\n      inputs: {\n        class: \"class\"\n      },\n      standalone: true,\n      features: [i0.ɵɵProvidersFeature([provideCustomClassSettableExisting(() => BrnDialogOverlayComponent)]), i0.ɵɵStandaloneFeature],\n      decls: 0,\n      vars: 0,\n      template: function BrnDialogOverlayComponent_Template(rf, ctx) {},\n      encapsulation: 2,\n      changeDetection: 0\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(BrnDialogOverlayComponent, [{\n    type: Component,\n    args: [{\n      selector: 'brn-dialog-overlay',\n      standalone: true,\n      template: ``,\n      providers: [provideCustomClassSettableExisting(() => BrnDialogOverlayComponent)],\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None\n    }]\n  }], null, {\n    class: [{\n      type: Input\n    }]\n  });\n})();\nclass BrnDialogTitleDirective {\n  constructor() {\n    this._brnDialogRef = inject(BrnDialogRef);\n    this._id = signal(`brn-dialog-title-${this._brnDialogRef?.dialogId}`);\n    effect(() => {\n      this._brnDialogRef.setAriaLabelledBy(this._id());\n    });\n  }\n  static {\n    this.ɵfac = function BrnDialogTitleDirective_Factory(t) {\n      return new (t || BrnDialogTitleDirective)();\n    };\n  }\n  static {\n    this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: BrnDialogTitleDirective,\n      selectors: [[\"\", \"brnDialogTitle\", \"\"]],\n      hostVars: 1,\n      hostBindings: function BrnDialogTitleDirective_HostBindings(rf, ctx) {\n        if (rf & 2) {\n          i0.ɵɵhostProperty(\"id\", ctx._id());\n        }\n      },\n      standalone: true\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(BrnDialogTitleDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[brnDialogTitle]',\n      standalone: true,\n      host: {\n        '[id]': '_id()'\n      }\n    }]\n  }], () => [], null);\n})();\nlet idSequence = 0;\nclass BrnDialogTriggerDirective {\n  constructor() {\n    this._brnDialog = inject(BrnDialogComponent, {\n      optional: true\n    });\n    this._brnDialogRef = inject(BrnDialogRef, {\n      optional: true\n    });\n    this.id = input(`brn-dialog-trigger-${idSequence++}`);\n    this.state = this._brnDialogRef?.state ?? signal('closed');\n    this.dialogId = `brn-dialog-${this._brnDialogRef?.dialogId ?? idSequence++}`;\n  }\n  set brnDialogTriggerFor(brnDialog) {\n    this._brnDialog = brnDialog;\n  }\n  open() {\n    this._brnDialog?.open();\n  }\n  static {\n    this.ɵfac = function BrnDialogTriggerDirective_Factory(t) {\n      return new (t || BrnDialogTriggerDirective)();\n    };\n  }\n  static {\n    this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: BrnDialogTriggerDirective,\n      selectors: [[\"button\", \"brnDialogTrigger\", \"\"], [\"button\", \"brnDialogTriggerFor\", \"\"]],\n      hostAttrs: [\"aria-haspopup\", \"dialog\"],\n      hostVars: 4,\n      hostBindings: function BrnDialogTriggerDirective_HostBindings(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵlistener(\"click\", function BrnDialogTriggerDirective_click_HostBindingHandler() {\n            return ctx.open();\n          });\n        }\n        if (rf & 2) {\n          i0.ɵɵhostProperty(\"id\", ctx.id());\n          i0.ɵɵattribute(\"aria-expanded\", ctx.state() === \"open\" ? \"true\" : \"false\")(\"data-state\", ctx.state())(\"aria-controls\", ctx.dialogId);\n        }\n      },\n      inputs: {\n        id: [i0.ɵɵInputFlags.SignalBased, \"id\"],\n        brnDialogTriggerFor: \"brnDialogTriggerFor\"\n      },\n      exportAs: [\"brnDialogTrigger\"],\n      standalone: true\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(BrnDialogTriggerDirective, [{\n    type: Directive,\n    args: [{\n      selector: 'button[brnDialogTrigger],button[brnDialogTriggerFor]',\n      standalone: true,\n      host: {\n        '[id]': 'id()',\n        '(click)': 'open()',\n        'aria-haspopup': 'dialog',\n        '[attr.aria-expanded]': \"state() === 'open' ? 'true': 'false'\",\n        '[attr.data-state]': 'state()',\n        '[attr.aria-controls]': 'dialogId'\n      },\n      exportAs: 'brnDialogTrigger'\n    }]\n  }], null, {\n    brnDialogTriggerFor: [{\n      type: Input\n    }]\n  });\n})();\nconst BrnDialogImports = [BrnDialogComponent, BrnDialogOverlayComponent, BrnDialogTriggerDirective, BrnDialogCloseDirective, BrnDialogContentDirective, BrnDialogTitleDirective, BrnDialogDescriptionDirective];\nclass BrnDialogModule {\n  static {\n    this.ɵfac = function BrnDialogModule_Factory(t) {\n      return new (t || BrnDialogModule)();\n    };\n  }\n  static {\n    this.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n      type: BrnDialogModule,\n      imports: [BrnDialogComponent, BrnDialogOverlayComponent, BrnDialogTriggerDirective, BrnDialogCloseDirective, BrnDialogContentDirective, BrnDialogTitleDirective, BrnDialogDescriptionDirective],\n      exports: [BrnDialogComponent, BrnDialogOverlayComponent, BrnDialogTriggerDirective, BrnDialogCloseDirective, BrnDialogContentDirective, BrnDialogTitleDirective, BrnDialogDescriptionDirective]\n    });\n  }\n  static {\n    this.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({});\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(BrnDialogModule, [{\n    type: NgModule,\n    args: [{\n      imports: [...BrnDialogImports],\n      exports: [...BrnDialogImports]\n    }]\n  }], null, null);\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { BrnDialogCloseDirective, BrnDialogComponent, BrnDialogContentDirective, BrnDialogDescriptionDirective, BrnDialogImports, BrnDialogModule, BrnDialogOverlayComponent, BrnDialogRef, BrnDialogService, BrnDialogTitleDirective, BrnDialogTriggerDirective, DEFAULT_BRN_DIALOG_OPTIONS, cssClassesToArray, injectBrnDialogContext, injectBrnDialogCtx };\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAeA,SAAS,0CAA0C,IAAI,KAAK;AAAC;AAC7D,IAAM,eAAN,MAAmB;AAAA,EACjB,cAAc;AAEZ,SAAK,OAAO;AAEZ,SAAK,aAAa;AAElB,SAAK,cAAc;AAEnB,SAAK,gBAAgB;AAErB,SAAK,eAAe;AAEpB,SAAK,QAAQ;AAEb,SAAK,SAAS;AAEd,SAAK,OAAO;AAEZ,SAAK,kBAAkB;AAEvB,SAAK,iBAAiB;AAEtB,SAAK,YAAY;AAEjB,SAAK,YAAY;AAMjB,SAAK,YAAY;AASjB,SAAK,eAAe;AAMpB,SAAK,oBAAoB;AAKzB,SAAK,iBAAiB;AAOtB,SAAK,4BAA4B;AAAA,EACnC;AACF;AACA,SAAS,yCAAyC;AAChD,QAAM,MAAM,uEAAuE;AACrF;AAKA,IAAM,sBAAN,MAAM,4BAA2B,iBAAiB;AAAA,EAChD,YAAY,aAAa,mBAAmB,WAAW,SAAS,uBAAuB,SAAS,aAAa,eAAe;AAC1H,UAAM;AACN,SAAK,cAAc;AACnB,SAAK,oBAAoB;AACzB,SAAK,UAAU;AACf,SAAK,wBAAwB;AAC7B,SAAK,UAAU;AACf,SAAK,cAAc;AACnB,SAAK,gBAAgB;AACrB,SAAK,YAAY,OAAO,QAAQ;AAEhC,SAAK,aAAa;AAElB,SAAK,uCAAuC;AAM5C,SAAK,wBAAwB;AAO7B,SAAK,uBAAuB,CAAC;AAC7B,SAAK,qBAAqB,OAAO,iBAAiB;AAOlD,SAAK,kBAAkB,YAAU;AAC/B,UAAI,KAAK,cAAc,YAAY,MAAM,OAAO,cAAc,eAAe,YAAY;AACvF,+CAAuC;AAAA,MACzC;AACA,YAAM,SAAS,KAAK,cAAc,gBAAgB,MAAM;AACxD,WAAK,iBAAiB;AACtB,aAAO;AAAA,IACT;AACA,SAAK,YAAY;AACjB,QAAI,KAAK,QAAQ,gBAAgB;AAC/B,WAAK,qBAAqB,KAAK,KAAK,QAAQ,cAAc;AAAA,IAC5D;AAAA,EACF;AAAA,EACA,mBAAmB,IAAI;AACrB,SAAK,qBAAqB,KAAK,EAAE;AACjC,SAAK,mBAAmB,aAAa;AAAA,EACvC;AAAA,EACA,sBAAsB,IAAI;AACxB,UAAM,QAAQ,KAAK,qBAAqB,QAAQ,EAAE;AAClD,QAAI,QAAQ,IAAI;AACd,WAAK,qBAAqB,OAAO,OAAO,CAAC;AACzC,WAAK,mBAAmB,aAAa;AAAA,IACvC;AAAA,EACF;AAAA,EACA,mBAAmB;AACjB,SAAK,qBAAqB;AAC1B,SAAK,sBAAsB;AAC3B,SAAK,qBAAqB;AAAA,EAC5B;AAAA;AAAA;AAAA;AAAA;AAAA,EAKA,uBAAuB;AACrB,SAAK,WAAW;AAAA,EAClB;AAAA,EACA,cAAc;AACZ,SAAK,cAAc;AAAA,EACrB;AAAA;AAAA;AAAA;AAAA;AAAA,EAKA,sBAAsB,QAAQ;AAC5B,QAAI,KAAK,cAAc,YAAY,MAAM,OAAO,cAAc,eAAe,YAAY;AACvF,6CAAuC;AAAA,IACzC;AACA,UAAM,SAAS,KAAK,cAAc,sBAAsB,MAAM;AAC9D,SAAK,iBAAiB;AACtB,WAAO;AAAA,EACT;AAAA;AAAA;AAAA;AAAA;AAAA,EAKA,qBAAqB,QAAQ;AAC3B,QAAI,KAAK,cAAc,YAAY,MAAM,OAAO,cAAc,eAAe,YAAY;AACvF,6CAAuC;AAAA,IACzC;AACA,UAAM,SAAS,KAAK,cAAc,qBAAqB,MAAM;AAC7D,SAAK,iBAAiB;AACtB,WAAO;AAAA,EACT;AAAA;AAAA;AAAA,EAGA,kBAAkB;AAChB,QAAI,CAAC,KAAK,eAAe,GAAG;AAC1B,WAAK,WAAW;AAAA,IAClB;AAAA,EACF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAMA,YAAY,SAAS,SAAS;AAC5B,QAAI,CAAC,KAAK,sBAAsB,YAAY,OAAO,GAAG;AACpD,cAAQ,WAAW;AAEnB,WAAK,QAAQ,kBAAkB,MAAM;AACnC,cAAM,WAAW,MAAM;AACrB,kBAAQ,oBAAoB,QAAQ,QAAQ;AAC5C,kBAAQ,oBAAoB,aAAa,QAAQ;AACjD,kBAAQ,gBAAgB,UAAU;AAAA,QACpC;AACA,gBAAQ,iBAAiB,QAAQ,QAAQ;AACzC,gBAAQ,iBAAiB,aAAa,QAAQ;AAAA,MAChD,CAAC;AAAA,IACH;AACA,YAAQ,MAAM,OAAO;AAAA,EACvB;AAAA;AAAA;AAAA;AAAA;AAAA,EAKA,oBAAoB,UAAU,SAAS;AACrC,QAAI,iBAAiB,KAAK,YAAY,cAAc,cAAc,QAAQ;AAC1E,QAAI,gBAAgB;AAClB,WAAK,YAAY,gBAAgB,OAAO;AAAA,IAC1C;AAAA,EACF;AAAA;AAAA;AAAA;AAAA;AAAA,EAKA,aAAa;AACX,UAAM,UAAU,KAAK,YAAY;AAMjC,YAAQ,KAAK,QAAQ,WAAW;AAAA,MAC9B,KAAK;AAAA,MACL,KAAK;AAMH,YAAI,CAAC,KAAK,eAAe,GAAG;AAC1B,kBAAQ,MAAM;AAAA,QAChB;AACA;AAAA,MACF,KAAK;AAAA,MACL,KAAK;AACH,aAAK,YAAY,6BAA6B,EAAE,KAAK,yBAAuB;AAG1E,cAAI,CAAC,qBAAqB;AACxB,iBAAK,sBAAsB;AAAA,UAC7B;AAAA,QACF,CAAC;AACD;AAAA,MACF,KAAK;AACH,aAAK,oBAAoB,0CAA0C;AACnE;AAAA,MACF;AACE,aAAK,oBAAoB,KAAK,QAAQ,SAAS;AAC/C;AAAA,IACJ;AAAA,EACF;AAAA;AAAA,EAEA,gBAAgB;AACd,UAAM,cAAc,KAAK,QAAQ;AACjC,QAAI,qBAAqB;AACzB,QAAI,OAAO,gBAAgB,UAAU;AACnC,2BAAqB,KAAK,UAAU,cAAc,WAAW;AAAA,IAC/D,WAAW,OAAO,gBAAgB,WAAW;AAC3C,2BAAqB,cAAc,KAAK,uCAAuC;AAAA,IACjF,WAAW,aAAa;AACtB,2BAAqB;AAAA,IACvB;AAEA,QAAI,KAAK,QAAQ,gBAAgB,sBAAsB,OAAO,mBAAmB,UAAU,YAAY;AACrG,YAAM,gBAAgB,kCAAkC;AACxD,YAAM,UAAU,KAAK,YAAY;AAKjC,UAAI,CAAC,iBAAiB,kBAAkB,KAAK,UAAU,QAAQ,kBAAkB,WAAW,QAAQ,SAAS,aAAa,GAAG;AAC3H,YAAI,KAAK,eAAe;AACtB,eAAK,cAAc,SAAS,oBAAoB,KAAK,qBAAqB;AAC1E,eAAK,wBAAwB;AAAA,QAC/B,OAAO;AACL,6BAAmB,MAAM;AAAA,QAC3B;AAAA,MACF;AAAA,IACF;AACA,QAAI,KAAK,YAAY;AACnB,WAAK,WAAW,QAAQ;AAAA,IAC1B;AAAA,EACF;AAAA;AAAA,EAEA,wBAAwB;AAEtB,QAAI,KAAK,YAAY,cAAc,OAAO;AACxC,WAAK,YAAY,cAAc,MAAM;AAAA,IACvC;AAAA,EACF;AAAA;AAAA,EAEA,iBAAiB;AACf,UAAM,UAAU,KAAK,YAAY;AACjC,UAAM,gBAAgB,kCAAkC;AACxD,WAAO,YAAY,iBAAiB,QAAQ,SAAS,aAAa;AAAA,EACpE;AAAA;AAAA,EAEA,uBAAuB;AACrB,QAAI,KAAK,UAAU,WAAW;AAC5B,WAAK,aAAa,KAAK,kBAAkB,OAAO,KAAK,YAAY,aAAa;AAG9E,UAAI,KAAK,WAAW;AAClB,aAAK,uCAAuC,kCAAkC;AAAA,MAChF;AAAA,IACF;AAAA,EACF;AAAA;AAAA,EAEA,wBAAwB;AAGtB,SAAK,YAAY,cAAc,EAAE,UAAU,MAAM;AAC/C,UAAI,KAAK,QAAQ,cAAc;AAC7B,aAAK,gBAAgB;AAAA,MACvB;AAAA,IACF,CAAC;AAAA,EACH;AAyCF;AAvCI,oBAAK,OAAO,SAAS,2BAA2B,GAAG;AACjD,SAAO,KAAK,KAAK,qBAAuB,kBAAqB,UAAU,GAAM,kBAAqB,gBAAgB,GAAM,kBAAkB,UAAU,CAAC,GAAM,kBAAkB,YAAY,GAAM,kBAAqB,oBAAoB,GAAM,kBAAqB,MAAM,GAAM,kBAAuB,UAAU,GAAM,kBAAqB,YAAY,CAAC;AAC1V;AAGA,oBAAK,OAAyB,kBAAkB;AAAA,EAC9C,MAAM;AAAA,EACN,WAAW,CAAC,CAAC,sBAAsB,CAAC;AAAA,EACpC,WAAW,SAAS,yBAAyB,IAAI,KAAK;AACpD,QAAI,KAAK,GAAG;AACV,MAAG,YAAY,iBAAiB,CAAC;AAAA,IACnC;AACA,QAAI,KAAK,GAAG;AACV,UAAI;AACJ,MAAG,eAAe,KAAQ,YAAY,CAAC,MAAM,IAAI,gBAAgB,GAAG;AAAA,IACtE;AAAA,EACF;AAAA,EACA,WAAW,CAAC,YAAY,MAAM,GAAG,sBAAsB;AAAA,EACvD,UAAU;AAAA,EACV,cAAc,SAAS,gCAAgC,IAAI,KAAK;AAC9D,QAAI,KAAK,GAAG;AACV,MAAG,YAAY,MAAM,IAAI,QAAQ,MAAM,IAAI,EAAE,QAAQ,IAAI,QAAQ,IAAI,EAAE,cAAc,IAAI,QAAQ,SAAS,EAAE,mBAAmB,IAAI,QAAQ,YAAY,OAAO,IAAI,qBAAqB,CAAC,CAAC,EAAE,cAAc,IAAI,QAAQ,SAAS,EAAE,oBAAoB,IAAI,QAAQ,mBAAmB,IAAI;AAAA,IACzR;AAAA,EACF;AAAA,EACA,YAAY;AAAA,EACZ,UAAU,CAAI,4BAA+B,mBAAmB;AAAA,EAChE,OAAO;AAAA,EACP,MAAM;AAAA,EACN,QAAQ,CAAC,CAAC,mBAAmB,EAAE,CAAC;AAAA,EAChC,UAAU,SAAS,4BAA4B,IAAI,KAAK;AACtD,QAAI,KAAK,GAAG;AACV,MAAG,WAAW,GAAG,2CAA2C,GAAG,GAAG,eAAe,CAAC;AAAA,IACpF;AAAA,EACF;AAAA,EACA,cAAc,CAAC,eAAe;AAAA,EAC9B,QAAQ,CAAC,mGAAmG;AAAA,EAC5G,eAAe;AACjB,CAAC;AAzRL,IAAM,qBAAN;AAAA,CA4RC,MAAM;AACL,GAAC,OAAO,cAAc,eAAe,cAAiB,iBAAkB,oBAAoB,CAAC;AAAA,IAC3F,MAAM;AAAA,IACN,MAAM,CAAC;AAAA,MACL,UAAU;AAAA,MACV,eAAe,oBAAkB;AAAA,MACjC,iBAAiB,wBAAwB;AAAA,MACzC,YAAY;AAAA,MACZ,SAAS,CAAC,eAAe;AAAA,MACzB,MAAM;AAAA,QACJ,SAAS;AAAA,QACT,YAAY;AAAA,QACZ,aAAa;AAAA,QACb,eAAe;AAAA,QACf,qBAAqB;AAAA,QACrB,0BAA0B;AAAA,QAC1B,qBAAqB;AAAA,QACrB,2BAA2B;AAAA,MAC7B;AAAA,MACA,UAAU;AAAA,MACV,QAAQ,CAAC,mGAAmG;AAAA,IAC9G,CAAC;AAAA,EACH,CAAC,GAAG,MAAM,CAAC;AAAA,IACT,MAAS;AAAA,EACX,GAAG;AAAA,IACD,MAAS;AAAA,EACX,GAAG;AAAA,IACD,MAAM;AAAA,IACN,YAAY,CAAC;AAAA,MACX,MAAM;AAAA,IACR,GAAG;AAAA,MACD,MAAM;AAAA,MACN,MAAM,CAAC,QAAQ;AAAA,IACjB,CAAC;AAAA,EACH,GAAG;AAAA,IACD,MAAM;AAAA,IACN,YAAY,CAAC;AAAA,MACX,MAAM;AAAA,MACN,MAAM,CAAC,YAAY;AAAA,IACrB,CAAC;AAAA,EACH,GAAG;AAAA,IACD,MAAS;AAAA,EACX,GAAG;AAAA,IACD,MAAS;AAAA,EACX,GAAG;AAAA,IACD,MAAW;AAAA,EACb,GAAG;AAAA,IACD,MAAS;AAAA,EACX,CAAC,GAAG;AAAA,IACF,eAAe,CAAC;AAAA,MACd,MAAM;AAAA,MACN,MAAM,CAAC,iBAAiB;AAAA,QACtB,QAAQ;AAAA,MACV,CAAC;AAAA,IACH,CAAC;AAAA,EACH,CAAC;AACH,GAAG;AAKH,IAAM,YAAN,MAAgB;AAAA,EACd,YAAY,YAAY,QAAQ;AAC9B,SAAK,aAAa;AAClB,SAAK,SAAS;AAEd,SAAK,SAAS,IAAI,QAAQ;AAC1B,SAAK,eAAe,OAAO;AAC3B,SAAK,gBAAgB,WAAW,cAAc;AAC9C,SAAK,gBAAgB,WAAW,cAAc;AAC9C,SAAK,uBAAuB,WAAW,qBAAqB;AAC5D,SAAK,KAAK,OAAO;AACjB,SAAK,cAAc,UAAU,WAAS;AACpC,UAAI,MAAM,YAAY,UAAU,CAAC,KAAK,gBAAgB,CAAC,eAAe,KAAK,GAAG;AAC5E,cAAM,eAAe;AACrB,aAAK,MAAM,QAAW;AAAA,UACpB,aAAa;AAAA,QACf,CAAC;AAAA,MACH;AAAA,IACF,CAAC;AACD,SAAK,cAAc,UAAU,MAAM;AACjC,UAAI,CAAC,KAAK,cAAc;AACtB,aAAK,MAAM,QAAW;AAAA,UACpB,aAAa;AAAA,QACf,CAAC;AAAA,MACH;AAAA,IACF,CAAC;AACD,SAAK,sBAAsB,WAAW,YAAY,EAAE,UAAU,MAAM;AAElE,UAAI,OAAO,8BAA8B,OAAO;AAC9C,aAAK,MAAM;AAAA,MACb;AAAA,IACF,CAAC;AAAA,EACH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAMA,MAAM,QAAQ,SAAS;AACrB,QAAI,KAAK,mBAAmB;AAC1B,YAAM,gBAAgB,KAAK;AAC3B,WAAK,kBAAkB,wBAAwB,SAAS,eAAe;AAGvE,WAAK,oBAAoB,YAAY;AACrC,WAAK,WAAW,QAAQ;AACxB,oBAAc,KAAK,MAAM;AACzB,oBAAc,SAAS;AACvB,WAAK,oBAAoB,KAAK,oBAAoB;AAAA,IACpD;AAAA,EACF;AAAA;AAAA,EAEA,iBAAiB;AACf,SAAK,WAAW,eAAe;AAC/B,WAAO;AAAA,EACT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAMA,WAAW,QAAQ,IAAI,SAAS,IAAI;AAClC,SAAK,WAAW,WAAW;AAAA,MACzB;AAAA,MACA;AAAA,IACF,CAAC;AACD,WAAO;AAAA,EACT;AAAA;AAAA,EAEA,cAAc,SAAS;AACrB,SAAK,WAAW,cAAc,OAAO;AACrC,WAAO;AAAA,EACT;AAAA;AAAA,EAEA,iBAAiB,SAAS;AACxB,SAAK,WAAW,iBAAiB,OAAO;AACxC,WAAO;AAAA,EACT;AACF;AAGA,IAAM,yBAAyB,IAAI,eAAe,wBAAwB;AAAA,EACxE,YAAY;AAAA,EACZ,SAAS,MAAM;AACb,UAAM,UAAU,OAAO,OAAO;AAC9B,WAAO,MAAM,QAAQ,iBAAiB,MAAM;AAAA,EAC9C;AACF,CAAC;AAED,IAAM,cAAc,IAAI,eAAe,YAAY;AAEnD,IAAM,wBAAwB,IAAI,eAAe,qBAAqB;AAqBtE,IAAI,WAAW;AACf,IAAM,UAAN,MAAM,QAAO;AAAA;AAAA,EAEX,IAAI,cAAc;AAChB,WAAO,KAAK,gBAAgB,KAAK,cAAc,cAAc,KAAK;AAAA,EACpE;AAAA;AAAA,EAEA,IAAI,cAAc;AAChB,WAAO,KAAK,gBAAgB,KAAK,cAAc,cAAc,KAAK;AAAA,EACpE;AAAA,EACA,YAAY,UAAU,WAAW,iBAAiB,eAAe,mBAAmB,gBAAgB;AAClG,SAAK,WAAW;AAChB,SAAK,YAAY;AACjB,SAAK,kBAAkB;AACvB,SAAK,gBAAgB;AACrB,SAAK,oBAAoB;AACzB,SAAK,0BAA0B,CAAC;AAChC,SAAK,6BAA6B,IAAI,QAAQ;AAC9C,SAAK,0BAA0B,IAAI,QAAQ;AAC3C,SAAK,sBAAsB,oBAAI,IAAI;AAKnC,SAAK,iBAAiB,MAAM,MAAM,KAAK,YAAY,SAAS,KAAK,mBAAmB,IAAI,KAAK,mBAAmB,EAAE,KAAK,UAAU,MAAS,CAAC,CAAC;AAC5I,SAAK,kBAAkB;AAAA,EACzB;AAAA,EACA,KAAK,wBAAwB,QAAQ;AACnC,UAAM,WAAW,KAAK,mBAAmB,IAAI,aAAa;AAC1D,aAAS,kCACJ,WACA;AAEL,WAAO,KAAK,OAAO,MAAM,cAAc,UAAU;AACjD,QAAI,OAAO,MAAM,KAAK,cAAc,OAAO,EAAE,MAAM,OAAO,cAAc,eAAe,YAAY;AACjG,YAAM,MAAM,mBAAmB,OAAO,EAAE,iDAAiD;AAAA,IAC3F;AACA,UAAM,gBAAgB,KAAK,kBAAkB,MAAM;AACnD,UAAM,aAAa,KAAK,SAAS,OAAO,aAAa;AACrD,UAAM,YAAY,IAAI,UAAU,YAAY,MAAM;AAClD,UAAM,kBAAkB,KAAK,iBAAiB,YAAY,WAAW,MAAM;AAC3E,cAAU,oBAAoB;AAC9B,SAAK,qBAAqB,wBAAwB,WAAW,iBAAiB,MAAM;AAEpF,QAAI,CAAC,KAAK,YAAY,QAAQ;AAC5B,WAAK,6CAA6C;AAAA,IACpD;AACA,SAAK,YAAY,KAAK,SAAS;AAC/B,cAAU,OAAO,UAAU,MAAM,KAAK,kBAAkB,WAAW,IAAI,CAAC;AACxE,SAAK,YAAY,KAAK,SAAS;AAC/B,WAAO;AAAA,EACT;AAAA;AAAA;AAAA;AAAA,EAIA,WAAW;AACT,mBAAe,KAAK,aAAa,YAAU,OAAO,MAAM,CAAC;AAAA,EAC3D;AAAA;AAAA;AAAA;AAAA;AAAA,EAKA,cAAc,IAAI;AAChB,WAAO,KAAK,YAAY,KAAK,YAAU,OAAO,OAAO,EAAE;AAAA,EACzD;AAAA,EACA,cAAc;AAIZ,mBAAe,KAAK,yBAAyB,YAAU;AAErD,UAAI,OAAO,OAAO,mBAAmB,OAAO;AAC1C,aAAK,kBAAkB,QAAQ,KAAK;AAAA,MACtC;AAAA,IACF,CAAC;AAID,mBAAe,KAAK,yBAAyB,YAAU,OAAO,MAAM,CAAC;AACrE,SAAK,2BAA2B,SAAS;AACzC,SAAK,wBAAwB,SAAS;AACtC,SAAK,0BAA0B,CAAC;AAAA,EAClC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAMA,kBAAkB,QAAQ;AACxB,UAAM,QAAQ,IAAI,cAAc;AAAA,MAC9B,kBAAkB,OAAO,oBAAoB,KAAK,SAAS,SAAS,EAAE,OAAO,EAAE,mBAAmB,EAAE,iBAAiB;AAAA,MACrH,gBAAgB,OAAO,kBAAkB,KAAK,gBAAgB;AAAA,MAC9D,YAAY,OAAO;AAAA,MACnB,aAAa,OAAO;AAAA,MACpB,WAAW,OAAO;AAAA,MAClB,UAAU,OAAO;AAAA,MACjB,WAAW,OAAO;AAAA,MAClB,UAAU,OAAO;AAAA,MACjB,WAAW,OAAO;AAAA,MAClB,OAAO,OAAO;AAAA,MACd,QAAQ,OAAO;AAAA,MACf,qBAAqB,OAAO;AAAA,IAC9B,CAAC;AACD,QAAI,OAAO,eAAe;AACxB,YAAM,gBAAgB,OAAO;AAAA,IAC/B;AACA,WAAO;AAAA,EACT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOA,iBAAiB,SAAS,WAAW,QAAQ;AAC3C,UAAM,eAAe,OAAO,YAAY,OAAO,kBAAkB;AACjE,UAAM,YAAY,CAAC;AAAA,MACjB,SAAS;AAAA,MACT,UAAU;AAAA,IACZ,GAAG;AAAA,MACD,SAAS;AAAA,MACT,UAAU;AAAA,IACZ,GAAG;AAAA,MACD,SAAS;AAAA,MACT,UAAU;AAAA,IACZ,CAAC;AACD,QAAI;AACJ,QAAI,OAAO,WAAW;AACpB,UAAI,OAAO,OAAO,cAAc,YAAY;AAC1C,wBAAgB,OAAO;AAAA,MACzB,OAAO;AACL,wBAAgB,OAAO,UAAU;AACjC,kBAAU,KAAK,GAAG,OAAO,UAAU,UAAU,MAAM,CAAC;AAAA,MACtD;AAAA,IACF,OAAO;AACL,sBAAgB;AAAA,IAClB;AACA,UAAM,kBAAkB,IAAI,gBAAgB,eAAe,OAAO,kBAAkB,SAAS,OAAO;AAAA,MAClG,QAAQ,gBAAgB,KAAK;AAAA,MAC7B;AAAA,IACF,CAAC,GAAG,OAAO,wBAAwB;AACnC,UAAM,eAAe,QAAQ,OAAO,eAAe;AACnD,WAAO,aAAa;AAAA,EACtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EASA,qBAAqB,wBAAwB,WAAW,iBAAiB,QAAQ;AAC/E,QAAI,kCAAkC,aAAa;AACjD,YAAM,WAAW,KAAK,gBAAgB,QAAQ,WAAW,iBAAiB,MAAS;AACnF,UAAI,UAAU;AAAA,QACZ,WAAW,OAAO;AAAA,QAClB;AAAA,MACF;AACA,UAAI,OAAO,iBAAiB;AAC1B,kBAAU,kCACL,UACC,OAAO,OAAO,oBAAoB,aAAa,OAAO,gBAAgB,IAAI,OAAO;AAAA,MAEzF;AACA,sBAAgB,qBAAqB,IAAI,eAAe,wBAAwB,MAAM,SAAS,QAAQ,CAAC;AAAA,IAC1G,OAAO;AACL,YAAM,WAAW,KAAK,gBAAgB,QAAQ,WAAW,iBAAiB,KAAK,SAAS;AACxF,YAAM,aAAa,gBAAgB,sBAAsB,IAAI,gBAAgB,wBAAwB,OAAO,kBAAkB,UAAU,OAAO,wBAAwB,CAAC;AACxK,gBAAU,eAAe;AACzB,gBAAU,oBAAoB,WAAW;AAAA,IAC3C;AAAA,EACF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAWA,gBAAgB,QAAQ,WAAW,iBAAiB,kBAAkB;AACpE,UAAM,eAAe,OAAO,YAAY,OAAO,kBAAkB;AACjE,UAAM,YAAY,CAAC;AAAA,MACjB,SAAS;AAAA,MACT,UAAU,OAAO;AAAA,IACnB,GAAG;AAAA,MACD,SAAS;AAAA,MACT,UAAU;AAAA,IACZ,CAAC;AACD,QAAI,OAAO,WAAW;AACpB,UAAI,OAAO,OAAO,cAAc,YAAY;AAC1C,kBAAU,KAAK,GAAG,OAAO,UAAU,WAAW,QAAQ,eAAe,CAAC;AAAA,MACxE,OAAO;AACL,kBAAU,KAAK,GAAG,OAAO,SAAS;AAAA,MACpC;AAAA,IACF;AACA,QAAI,OAAO,cAAc,CAAC,gBAAgB,CAAC,aAAa,IAAI,gBAAgB,MAAM;AAAA,MAChF,UAAU;AAAA,IACZ,CAAC,IAAI;AACH,gBAAU,KAAK;AAAA,QACb,SAAS;AAAA,QACT,UAAU;AAAA,UACR,OAAO,OAAO;AAAA,UACd,QAAQ,GAAG;AAAA,QACb;AAAA,MACF,CAAC;AAAA,IACH;AACA,WAAO,SAAS,OAAO;AAAA,MACrB,QAAQ,gBAAgB;AAAA,MACxB;AAAA,IACF,CAAC;AAAA,EACH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAMA,kBAAkB,WAAW,WAAW;AACtC,UAAM,QAAQ,KAAK,YAAY,QAAQ,SAAS;AAChD,QAAI,QAAQ,IAAI;AACd,WAAK,YAAY,OAAO,OAAO,CAAC;AAGhC,UAAI,CAAC,KAAK,YAAY,QAAQ;AAC5B,aAAK,oBAAoB,QAAQ,CAAC,eAAe,YAAY;AAC3D,cAAI,eAAe;AACjB,oBAAQ,aAAa,eAAe,aAAa;AAAA,UACnD,OAAO;AACL,oBAAQ,gBAAgB,aAAa;AAAA,UACvC;AAAA,QACF,CAAC;AACD,aAAK,oBAAoB,MAAM;AAC/B,YAAI,WAAW;AACb,eAAK,mBAAmB,EAAE,KAAK;AAAA,QACjC;AAAA,MACF;AAAA,IACF;AAAA,EACF;AAAA;AAAA,EAEA,+CAA+C;AAC7C,UAAM,mBAAmB,KAAK,kBAAkB,oBAAoB;AAEpE,QAAI,iBAAiB,eAAe;AAClC,YAAM,WAAW,iBAAiB,cAAc;AAChD,eAAS,IAAI,SAAS,SAAS,GAAG,IAAI,IAAI,KAAK;AAC7C,cAAM,UAAU,SAAS,CAAC;AAC1B,YAAI,YAAY,oBAAoB,QAAQ,aAAa,YAAY,QAAQ,aAAa,WAAW,CAAC,QAAQ,aAAa,WAAW,GAAG;AACvI,eAAK,oBAAoB,IAAI,SAAS,QAAQ,aAAa,aAAa,CAAC;AACzE,kBAAQ,aAAa,eAAe,MAAM;AAAA,QAC5C;AAAA,MACF;AAAA,IACF;AAAA,EACF;AAAA,EACA,qBAAqB;AACnB,UAAM,SAAS,KAAK;AACpB,WAAO,SAAS,OAAO,mBAAmB,IAAI,KAAK;AAAA,EACrD;AAaF;AAXI,QAAK,OAAO,SAAS,eAAe,GAAG;AACrC,SAAO,KAAK,KAAK,SAAW,SAAc,OAAO,GAAM,SAAY,QAAQ,GAAM,SAAS,uBAAuB,CAAC,GAAM,SAAS,SAAQ,EAAE,GAAM,SAAc,gBAAgB,GAAM,SAAS,sBAAsB,CAAC;AACvN;AAGA,QAAK,QAA0B,mBAAmB;AAAA,EAChD,OAAO;AAAA,EACP,SAAS,QAAO;AAAA,EAChB,YAAY;AACd,CAAC;AA7QL,IAAM,SAAN;AAAA,CAgRC,MAAM;AACL,GAAC,OAAO,cAAc,eAAe,cAAiB,iBAAkB,QAAQ,CAAC;AAAA,IAC/E,MAAM;AAAA,IACN,MAAM,CAAC;AAAA,MACL,YAAY;AAAA,IACd,CAAC;AAAA,EACH,CAAC,GAAG,MAAM,CAAC;AAAA,IACT,MAAW;AAAA,EACb,GAAG;AAAA,IACD,MAAS;AAAA,EACX,GAAG;AAAA,IACD,MAAM;AAAA,IACN,YAAY,CAAC;AAAA,MACX,MAAM;AAAA,IACR,GAAG;AAAA,MACD,MAAM;AAAA,MACN,MAAM,CAAC,qBAAqB;AAAA,IAC9B,CAAC;AAAA,EACH,GAAG;AAAA,IACD,MAAM;AAAA,IACN,YAAY,CAAC;AAAA,MACX,MAAM;AAAA,IACR,GAAG;AAAA,MACD,MAAM;AAAA,IACR,CAAC;AAAA,EACH,GAAG;AAAA,IACD,MAAW;AAAA,EACb,GAAG;AAAA,IACD,MAAM;AAAA,IACN,YAAY,CAAC;AAAA,MACX,MAAM;AAAA,MACN,MAAM,CAAC,sBAAsB;AAAA,IAC/B,CAAC;AAAA,EACH,CAAC,GAAG,IAAI;AACV,GAAG;AAKH,SAAS,eAAe,OAAO,UAAU;AACvC,MAAI,IAAI,MAAM;AACd,SAAO,KAAK;AACV,aAAS,MAAM,CAAC,CAAC;AAAA,EACnB;AACF;AACA,IAAM,gBAAN,MAAM,cAAa;AAyBnB;AAvBI,cAAK,OAAO,SAAS,qBAAqB,GAAG;AAC3C,SAAO,KAAK,KAAK,eAAc;AACjC;AAGA,cAAK,OAAyB,iBAAiB;AAAA,EAC7C,MAAM;AAAA,EACN,SAAS,CAAC,eAAe,cAAc,YAAY,kBAAkB;AAAA,EACrE,SAAS;AAAA;AAAA;AAAA,IAGT;AAAA,IAAc;AAAA,EAAkB;AAClC,CAAC;AAGD,cAAK,OAAyB,iBAAiB;AAAA,EAC7C,WAAW,CAAC,MAAM;AAAA,EAClB,SAAS;AAAA,IAAC;AAAA,IAAe;AAAA,IAAc;AAAA;AAAA;AAAA,IAGvC;AAAA,EAAY;AACd,CAAC;AAvBL,IAAM,eAAN;AAAA,CA0BC,MAAM;AACL,GAAC,OAAO,cAAc,eAAe,cAAiB,iBAAkB,cAAc,CAAC;AAAA,IACrF,MAAM;AAAA,IACN,MAAM,CAAC;AAAA,MACL,SAAS,CAAC,eAAe,cAAc,YAAY,kBAAkB;AAAA,MACrE,SAAS;AAAA;AAAA;AAAA,QAGT;AAAA,QAAc;AAAA,MAAkB;AAAA,MAChC,WAAW,CAAC,MAAM;AAAA,IACpB,CAAC;AAAA,EACH,CAAC,GAAG,MAAM,IAAI;AAChB,GAAG;;;AC13BH,IAAM,MAAM,CAAC,GAAG;AAChB,IAAI,iBAAiB;AACrB,IAAM,oBAAoB,CAAC,SAAS,eAAe,OAAO;AACxD,MAAI,OAAO,YAAY,UAAU;AAC/B,UAAM,eAAe,QAAQ,KAAK,EAAE,MAAM,GAAG;AAC7C,QAAI,aAAa,WAAW,GAAG;AAC7B,aAAO,CAAC,YAAY;AAAA,IACtB;AACA,WAAO;AAAA,EACT;AACA,SAAO,WAAW,CAAC;AACrB;AAEA,IAAM,qBAAqB,MAAM;AAC/B,SAAO,OAAO,WAAW;AAC3B;AAEA,IAAM,yBAAyB,CAAC,UAAU,CAAC,MAAM;AAC/C,SAAO,OAAO,aAAa,OAAO;AACpC;AACA,IAAM,oBAAN,MAAM,kBAAiB;AAAA,EACrB,cAAc;AACZ,SAAK,aAAa,OAAO,MAAM;AAC/B,SAAK,mBAAmB,OAAO,gBAAgB;AAC/C,SAAK,YAAY,KAAK,iBAAiB,eAAe,MAAM,IAAI;AAChE,SAAK,mBAAmB,OAAO,sBAAsB;AACrD,SAAK,OAAO,OAAO,qBAAqB;AACxC,SAAK,YAAY,OAAO,QAAQ;AAAA,EAClC;AAAA,EACA,KAAK,SAAS,KAAK,SAAS,SAAS;AACnC,QAAI,SAAS,MAAM,KAAK,WAAW,cAAc,QAAQ,EAAE,GAAG;AAC5D,YAAM,IAAI,MAAM,mBAAmB,QAAQ,EAAE,iBAAiB;AAAA,IAChE;AACA,UAAM,mBAAmB,SAAS,qBAAqB,SAAS,YAAY,SAAS,mBAAmB,SAAS,iBAAiB,SAAS,IAAI,KAAK,kBAAkB,oBAAoB,QAAQ,QAAQ,EAAE,cAAc,QAAQ,mBAAmB,CAAC,CAAC,IAAI,KAAK,iBAAiB,OAAO,EAAE,mBAAmB,EAAE,iBAAiB;AAChU,QAAI;AACJ,QAAI;AAEJ,UAAM,gBAAgB,iCACjB,UADiB;AAAA;AAAA,MAGpB,OAAO,CAAC,SAAS,WAAc,aAAa,MAAM,QAAQ,SAAS,UAAU;AAAA,IAC/E;AACA,UAAM,aAAa,IAAI,QAAQ;AAC/B,UAAM,OAAO,OAAO,IAAI;AACxB,UAAM,QAAQ,SAAS,MAAM,KAAK,IAAI,SAAS,QAAQ;AACvD,UAAM,WAAW;AAGjB,UAAM,eAAe,KAAK,WAAW,KAAK,SAAS;AAAA,MACjD,IAAI,SAAS,MAAM,cAAc,QAAQ;AAAA,MACzC,MAAM,SAAS;AAAA,MACf,kBAAkB;AAAA,MAClB,iBAAiB,OAAO;AAAA,QACtB,WAAW;AAAA,MACb;AAAA,MACA,MAAM;AAAA,MACN,aAAa,SAAS;AAAA,MACtB,YAAY,kBAAkB,SAAS,UAAU;AAAA,MACjD,eAAe,kBAAkB,SAAS,eAAe,gBAAgB;AAAA,MACzE;AAAA,MACA,gBAAgB,SAAS,kBAAkB,KAAK,MAAM,MAAM;AAAA,MAC5D,cAAc,SAAS;AAAA,MACvB,cAAc;AAAA,MACd,WAAW,SAAS,aAAa;AAAA,MACjC,iBAAiB,SAAS,mBAAmB,0BAA0B,QAAQ;AAAA,MAC/E,gBAAgB,SAAS,kBAAkB,oBAAoB,QAAQ;AAAA,MACvE,WAAW,SAAS;AAAA,MACpB,WAAW,SAAS;AAAA,MACpB,WAAW,CAAAA,kBAAgB;AACzB,uBAAe,IAAI,aAAaA,eAAc,MAAM,OAAO,UAAU,OAAO;AAC5E,8BAAsB,KAAK,WAAW,MAAM;AAC1C,sBAAY,OAAO,MAAM;AACvB,gBAAI,SAAS;AACX,mBAAK,UAAU,aAAa,SAAS,cAAc,MAAM,CAAC;AAAA,YAC5D;AACA,gBAAI,UAAU;AACZ,mBAAK,UAAU,aAAa,UAAU,cAAc,MAAM,CAAC;AAAA,YAC7D;AAAA,UACF,CAAC;AAAA,QACH,CAAC;AACD,cAAM,YAAY,CAAC;AAAA,UACjB,SAAS;AAAA,UACT,UAAU;AAAA,QACZ,CAAC;AACD,YAAI,SAAS,WAAW;AACtB,cAAI,OAAO,QAAQ,cAAc,YAAY;AAC3C,sBAAU,KAAK,GAAG,QAAQ,UAAU,CAAC;AAAA,UACvC;AACA,cAAI,MAAM,QAAQ,QAAQ,SAAS,GAAG;AACpC,sBAAU,KAAK,GAAG,QAAQ,SAAS;AAAA,UACrC;AAAA,QACF;AACA,eAAO;AAAA,MACT;AAAA,IACF,CAAC;AACD,UAAM,UAAU,aAAa,WAAW;AACxC,UAAM,WAAW,aAAa,WAAW;AACzC,QAAI,SAAS,6BAA6B;AACxC,mBAAa,qBAAqB,KAAK,UAAU,UAAU,CAAC,EAAE,UAAU,MAAM;AAC5E,qBAAa,MAAM,QAAW,SAAS,UAAU;AAAA,MACnD,CAAC;AAAA,IACH;AACA,QAAI,SAAS,sBAAsB;AACjC,mBAAa,cAAc,KAAK,UAAU,UAAU,CAAC,EAAE,UAAU,MAAM;AACrE,qBAAa,MAAM,QAAW,SAAS,UAAU;AAAA,MACnD,CAAC;AAAA,IACH;AACA,QAAI,CAAC,SAAS,cAAc;AAC1B,mBAAa,cAAc,KAAK,OAAO,OAAK,EAAE,QAAQ,QAAQ,GAAG,UAAU,UAAU,CAAC,EAAE,UAAU,MAAM;AACtG,qBAAa,MAAM,QAAW,SAAS,UAAU;AAAA,MACnD,CAAC;AAAA,IACH;AACA,iBAAa,OAAO,KAAK,UAAU,UAAU,CAAC,EAAE,UAAU,MAAM;AAC9D,iBAAW,QAAQ;AACnB,iBAAW,KAAK;AAAA,IAClB,CAAC;AACD,WAAO;AAAA,EACT;AAaF;AAXI,kBAAK,OAAO,SAAS,yBAAyB,GAAG;AAC/C,SAAO,KAAK,KAAK,mBAAkB;AACrC;AAGA,kBAAK,QAA0B,mBAAmB;AAAA,EAChD,OAAO;AAAA,EACP,SAAS,kBAAiB;AAAA,EAC1B,YAAY;AACd,CAAC;AA5GL,IAAM,mBAAN;AAAA,CA+GC,MAAM;AACL,GAAC,OAAO,cAAc,eAAe,cAAiB,iBAAkB,kBAAkB,CAAC;AAAA,IACzF,MAAM;AAAA,IACN,MAAM,CAAC;AAAA,MACL,YAAY;AAAA,IACd,CAAC;AAAA,EACH,CAAC,GAAG,MAAM,IAAI;AAChB,GAAG;AAGH,IAAM,eAAN,MAAmB;AAAA,EACjB,IAAI,OAAO;AACT,WAAO,KAAK,MAAM,MAAM;AAAA,EAC1B;AAAA,EACA,YAAY,eAAe,OAAO,OAAO,UAAU,UAAU;AAC3D,SAAK,gBAAgB;AACrB,SAAK,QAAQ;AACb,SAAK,QAAQ;AACb,SAAK,WAAW;AAChB,SAAK,WAAW;AAChB,SAAK,YAAY,IAAI,QAAQ;AAC7B,SAAK,WAAW,KAAK,UAAU,aAAa;AAC5C,SAAK,UAAU,KAAK,cAAc,OAAO,KAAK,KAAK,CAAC,CAAC;AAAA,EACvD;AAAA,EACA,MAAM,QAAQ,QAAQ,KAAK,UAAU,cAAc,GAAG;AACpD,QAAI,CAAC,KAAK,QAAQ,KAAK,UAAU;AAAc;AAC/C,SAAK,UAAU,KAAK;AACpB,SAAK,MAAM,IAAI,KAAK;AACpB,QAAI,KAAK,kBAAkB;AACzB,mBAAa,KAAK,gBAAgB;AAAA,IACpC;AACA,SAAK,mBAAmB,WAAW,MAAM;AACvC,WAAK,cAAc,MAAM,MAAM;AAAA,IACjC,GAAG,KAAK;AAAA,EACV;AAAA,EACA,cAAc,WAAW;AACvB,SAAK,cAAc,OAAO,aAAa,kBAAkB,SAAS;AAAA,EACpE;AAAA,EACA,gBAAgB,cAAc;AAC5B,SAAK,cAAc,OAAO,gBAAgB,kBAAkB,YAAY;AAAA,EAC1E;AAAA,EACA,mBAAmB,iBAAiB;AAClC,SAAK,cAAc,OAAO,kBAAkB;AAAA,EAC9C;AAAA,EACA,kBAAkB,gBAAgB;AAChC,SAAK,cAAc,OAAO,iBAAiB;AAAA,EAC7C;AAAA,EACA,aAAa,WAAW;AACtB,SAAK,cAAc,OAAO,YAAY;AAAA,EACxC;AACF;AACA,IAAM,2BAAN,MAAM,yBAAwB;AAAA,EAC5B,cAAc;AACZ,SAAK,gBAAgB,OAAO,YAAY;AAAA,EAC1C;AAAA,EACA,IAAI,MAAM,OAAO;AACf,SAAK,SAAS,qBAAqB,KAAK;AAAA,EAC1C;AAAA,EACA,QAAQ;AACN,SAAK,cAAc,MAAM,QAAW,KAAK,MAAM;AAAA,EACjD;AAuBF;AArBI,yBAAK,OAAO,SAAS,gCAAgC,GAAG;AACtD,SAAO,KAAK,KAAK,0BAAyB;AAC5C;AAGA,yBAAK,OAAyB,kBAAkB;AAAA,EAC9C,MAAM;AAAA,EACN,WAAW,CAAC,CAAC,UAAU,kBAAkB,EAAE,CAAC;AAAA,EAC5C,cAAc,SAAS,qCAAqC,IAAI,KAAK;AACnE,QAAI,KAAK,GAAG;AACV,MAAG,WAAW,SAAS,SAAS,mDAAmD;AACjF,eAAO,IAAI,MAAM;AAAA,MACnB,CAAC;AAAA,IACH;AAAA,EACF;AAAA,EACA,QAAQ;AAAA,IACN,OAAO;AAAA,EACT;AAAA,EACA,YAAY;AACd,CAAC;AA9BL,IAAM,0BAAN;AAAA,CAiCC,MAAM;AACL,GAAC,OAAO,cAAc,eAAe,cAAiB,iBAAkB,yBAAyB,CAAC;AAAA,IAChG,MAAM;AAAA,IACN,MAAM,CAAC;AAAA,MACL,UAAU;AAAA,MACV,YAAY;AAAA,MACZ,MAAM;AAAA,QACJ,WAAW;AAAA,MACb;AAAA,IACF,CAAC;AAAA,EACH,CAAC,GAAG,MAAM;AAAA,IACR,OAAO,CAAC;AAAA,MACN,MAAM;AAAA,IACR,CAAC;AAAA,EACH,CAAC;AACH,GAAG;AACH,IAAM,6BAA6B;AAAA,EACjC,MAAM;AAAA,EACN,iBAAiB,CAAC;AAAA,EAClB,UAAU;AAAA,EACV,WAAW;AAAA,EACX,eAAe;AAAA,EACf,YAAY;AAAA,EACZ,sBAAsB;AAAA,EACtB,6BAA6B;AAAA,EAC7B,aAAa;AAAA,EACb,YAAY;AAAA,EACZ,kBAAkB;AAAA,EAClB,cAAc;AAAA,EACd,gBAAgB;AAAA,EAChB,cAAc;AAAA,EACd,WAAW;AAAA,EACX,WAAW;AACb;AACA,IAAM,sBAAN,MAAM,oBAAmB;AAAA,EACvB,cAAc;AACZ,SAAK,iBAAiB,OAAO,gBAAgB;AAC7C,SAAK,OAAO,OAAO,gBAAgB;AACnC,SAAK,kBAAkB,OAAO,sBAAsB;AACpD,SAAK,OAAO,OAAO,qBAAqB;AACxC,SAAK,YAAY,OAAO,QAAQ;AAChC,SAAK,WAAW,CAAC;AACjB,SAAK,WAAW,mBACX;AAEL,SAAK,aAAa,OAAO,MAAS;AAClC,SAAK,QAAQ,SAAS,MAAM,KAAK,WAAW,GAAG,MAAM,KAAK,QAAQ;AAClE,SAAK,SAAS,IAAI,aAAa;AAC/B,SAAK,eAAe,IAAI,aAAa;AAAA,EACvC;AAAA;AAAA,EAEA,IAAI,SAAS,OAAO;AAClB,QAAI,UAAU,QAAQ;AACpB,WAAK,KAAK;AAAA,IACZ;AACA,QAAI,UAAU,UAAU;AACtB,WAAK,MAAM,KAAK,SAAS,YAAY,CAAC;AAAA,IACxC;AAAA,EACF;AAAA,EACA,IAAI,KAAK,MAAM;AACb,SAAK,SAAS,MAAM,IAAI;AAAA,EAC1B;AAAA,EACA,IAAI,YAAY,aAAa;AAC3B,SAAK,SAAS,aAAa,IAAI;AAAA,EACjC;AAAA,EACA,IAAI,iBAAiB,kBAAkB;AACrC,SAAK,SAAS,kBAAkB,IAAI;AAAA,EACtC;AAAA,EACA,IAAI,eAAe,gBAAgB;AACjC,QAAI,mBAAmB,SAAS;AAC9B,WAAK,SAAS,gBAAgB,IAAI,KAAK,KAAK,MAAM;AAAA,IACpD,WAAW,mBAAmB,cAAc;AAC1C,WAAK,SAAS,gBAAgB,IAAI,KAAK,KAAK,WAAW;AAAA,IACzD,OAAO;AACL,WAAK,SAAS,gBAAgB,IAAI;AAAA,IACpC;AAAA,EACF;AAAA,EACA,IAAI,aAAa,cAAc;AAC7B,SAAK,SAAS,cAAc,IAAI;AAAA,EAClC;AAAA,EACA,IAAI,4BAA4B,6BAA6B;AAC3D,SAAK,SAAS,6BAA6B,IAAI;AAAA,EACjD;AAAA,EACA,IAAI,qBAAqB,sBAAsB;AAC7C,SAAK,SAAS,sBAAsB,IAAI;AAAA,EAC1C;AAAA,EACA,IAAI,SAAS,UAAU;AACrB,SAAK,SAAS,UAAU,IAAI;AAAA,EAC9B;AAAA,EACA,IAAI,gBAAgB,iBAAiB;AACnC,SAAK,SAAS,iBAAiB,IAAI;AAAA,EACrC;AAAA,EACA,IAAI,UAAU,WAAW;AACvB,SAAK,SAAS,WAAW,IAAI;AAAA,EAC/B;AAAA,EACA,IAAI,WAAW,YAAY;AACzB,SAAK,SAAS,YAAY,IAAI;AAAA,EAChC;AAAA,EACA,IAAI,aAAa,cAAc;AAC7B,SAAK,SAAS,cAAc,IAAI;AAAA,EAClC;AAAA;AAAA,EAEA,IAAI,gBAAgB,iBAAiB;AACnC,SAAK,mBAAmB,eAAe;AAAA,EACzC;AAAA;AAAA,EAEA,IAAI,eAAe,gBAAgB;AACjC,SAAK,kBAAkB,cAAc;AAAA,EACvC;AAAA;AAAA,EAEA,IAAI,UAAU,WAAW;AACvB,SAAK,aAAa,SAAS;AAAA,EAC7B;AAAA;AAAA,EAEA,IAAI,UAAU,SAAS;AACrB,SAAK,aAAa,OAAO;AAAA,EAC3B;AAAA,EACA,OAAO;AACL,QAAI,CAAC,KAAK,oBAAoB,KAAK,WAAW;AAAG;AACjD,SAAK,uBAAuB,QAAQ;AACpC,UAAM,YAAY,KAAK,eAAe,KAAK,KAAK,kBAAkB,KAAK,MAAM,KAAK,UAAU,KAAK,QAAQ;AACzG,SAAK,WAAW,IAAI,SAAS;AAC7B,0BAAsB,KAAK,WAAW,MAAM;AAC1C,WAAK,wBAAwB,OAAO,MAAM,KAAK,aAAa,KAAK,UAAU,MAAM,CAAC,CAAC;AAAA,IACrF,CAAC;AACD,cAAU,QAAQ,KAAK,KAAK,CAAC,CAAC,EAAE,UAAU,YAAU;AAClD,WAAK,WAAW,IAAI,MAAS;AAC7B,WAAK,OAAO,KAAK,MAAM;AAAA,IACzB,CAAC;AAAA,EACH;AAAA;AAAA,EAEA,MAAM,QAAQ,OAAO;AACnB,SAAK,WAAW,GAAG,MAAM,QAAQ,SAAS,KAAK,SAAS,UAAU;AAAA,EACpE;AAAA,EACA,iBAAiB,UAAU;AACzB,SAAK,mBAAmB;AAAA,EAC1B;AAAA,EACA,gBAAgB,cAAc;AAC5B,SAAK,SAAS,eAAe,IAAI,gBAAgB;AACjD,SAAK,WAAW,GAAG,gBAAgB,YAAY;AAAA,EACjD;AAAA,EACA,cAAc,YAAY;AACxB,SAAK,SAAS,YAAY,IAAI,cAAc;AAC5C,SAAK,WAAW,GAAG,cAAc,UAAU;AAAA,EAC7C;AAAA,EACA,WAAW,SAAS;AAGlB,SAAK,WAAW,kCACX,KAAK,WACL;AAAA,EAEP;AAAA,EACA,mBAAmB,iBAAiB;AAClC,SAAK,WAAW,iCACX,KAAK,WADM;AAAA,MAEd;AAAA,IACF;AACA,SAAK,WAAW,GAAG,mBAAmB,eAAe;AAAA,EACvD;AAAA,EACA,kBAAkB,gBAAgB;AAChC,SAAK,WAAW,iCACX,KAAK,WADM;AAAA,MAEd;AAAA,IACF;AACA,SAAK,WAAW,GAAG,kBAAkB,cAAc;AAAA,EACrD;AAAA,EACA,aAAa,WAAW;AACtB,SAAK,WAAW,iCACX,KAAK,WADM;AAAA,MAEd;AAAA,IACF;AACA,SAAK,WAAW,GAAG,aAAa,SAAS;AAAA,EAC3C;AAAA,EACA,aAAa,WAAW;AACtB,SAAK,WAAW,iCACX,KAAK,WADM;AAAA,MAEd;AAAA,IACF;AAAA,EACF;AAiDF;AA/CI,oBAAK,OAAO,SAAS,2BAA2B,GAAG;AACjD,SAAO,KAAK,KAAK,qBAAoB;AACvC;AAGA,oBAAK,OAAyB,kBAAkB;AAAA,EAC9C,MAAM;AAAA,EACN,WAAW,CAAC,CAAC,YAAY,CAAC;AAAA,EAC1B,QAAQ;AAAA,IACN,UAAU,CAAI,WAAa,MAAM,SAAS,UAAU;AAAA,IACpD,MAAM;AAAA,IACN,aAAa,CAAI,WAAa,4BAA4B,eAAe,eAAe,gBAAgB;AAAA,IACxG,kBAAkB;AAAA,IAClB,gBAAgB;AAAA,IAChB,cAAc;AAAA,IACd,6BAA6B,CAAI,WAAa,4BAA4B,+BAA+B,+BAA+B,gBAAgB;AAAA,IACxJ,sBAAsB,CAAI,WAAa,4BAA4B,wBAAwB,wBAAwB,gBAAgB;AAAA,IACnI,UAAU;AAAA,IACV,iBAAiB;AAAA,IACjB,WAAW;AAAA,IACX,YAAY,CAAI,WAAa,4BAA4B,cAAc,cAAc,eAAe;AAAA,IACpG,cAAc,CAAI,WAAa,4BAA4B,gBAAgB,gBAAgB,gBAAgB;AAAA,IAC3G,iBAAiB,CAAI,WAAa,MAAM,oBAAoB,iBAAiB;AAAA,IAC7E,gBAAgB,CAAI,WAAa,MAAM,mBAAmB,gBAAgB;AAAA,IAC1E,WAAW,CAAI,WAAa,MAAM,cAAc,WAAW;AAAA,IAC3D,WAAW,CAAI,WAAa,4BAA4B,cAAc,aAAa,gBAAgB;AAAA,EACrG;AAAA,EACA,SAAS;AAAA,IACP,QAAQ;AAAA,IACR,cAAc;AAAA,EAChB;AAAA,EACA,UAAU,CAAC,WAAW;AAAA,EACtB,YAAY;AAAA,EACZ,UAAU,CAAI,0BAA6B,mBAAmB;AAAA,EAC9D,oBAAoB;AAAA,EACpB,OAAO;AAAA,EACP,MAAM;AAAA,EACN,UAAU,SAAS,4BAA4B,IAAI,KAAK;AACtD,QAAI,KAAK,GAAG;AACV,MAAG,gBAAgB;AACnB,MAAG,aAAa,CAAC;AAAA,IACnB;AAAA,EACF;AAAA,EACA,eAAe;AAAA,EACf,iBAAiB;AACnB,CAAC;AAhML,IAAM,qBAAN;AAAA,CAmMC,MAAM;AACL,GAAC,OAAO,cAAc,eAAe,cAAiB,iBAAkB,oBAAoB,CAAC;AAAA,IAC3F,MAAM;AAAA,IACN,MAAM,CAAC;AAAA,MACL,UAAU;AAAA,MACV,YAAY;AAAA,MACZ,UAAU;AAAA;AAAA;AAAA,MAGV,iBAAiB,wBAAwB;AAAA,MACzC,eAAe,oBAAkB;AAAA,MACjC,UAAU;AAAA,IACZ,CAAC;AAAA,EACH,CAAC,GAAG,MAAM;AAAA,IACR,QAAQ,CAAC;AAAA,MACP,MAAM;AAAA,IACR,CAAC;AAAA,IACD,cAAc,CAAC;AAAA,MACb,MAAM;AAAA,IACR,CAAC;AAAA,IACD,UAAU,CAAC;AAAA,MACT,MAAM;AAAA,MACN,MAAM,CAAC,OAAO;AAAA,IAChB,CAAC;AAAA,IACD,MAAM,CAAC;AAAA,MACL,MAAM;AAAA,IACR,CAAC;AAAA,IACD,aAAa,CAAC;AAAA,MACZ,MAAM;AAAA,MACN,MAAM,CAAC;AAAA,QACL,WAAW;AAAA,MACb,CAAC;AAAA,IACH,CAAC;AAAA,IACD,kBAAkB,CAAC;AAAA,MACjB,MAAM;AAAA,IACR,CAAC;AAAA,IACD,gBAAgB,CAAC;AAAA,MACf,MAAM;AAAA,IACR,CAAC;AAAA,IACD,cAAc,CAAC;AAAA,MACb,MAAM;AAAA,IACR,CAAC;AAAA,IACD,6BAA6B,CAAC;AAAA,MAC5B,MAAM;AAAA,MACN,MAAM,CAAC;AAAA,QACL,WAAW;AAAA,MACb,CAAC;AAAA,IACH,CAAC;AAAA,IACD,sBAAsB,CAAC;AAAA,MACrB,MAAM;AAAA,MACN,MAAM,CAAC;AAAA,QACL,WAAW;AAAA,MACb,CAAC;AAAA,IACH,CAAC;AAAA,IACD,UAAU,CAAC;AAAA,MACT,MAAM;AAAA,IACR,CAAC;AAAA,IACD,iBAAiB,CAAC;AAAA,MAChB,MAAM;AAAA,IACR,CAAC;AAAA,IACD,WAAW,CAAC;AAAA,MACV,MAAM;AAAA,IACR,CAAC;AAAA,IACD,YAAY,CAAC;AAAA,MACX,MAAM;AAAA,MACN,MAAM,CAAC;AAAA,QACL,WAAW;AAAA,MACb,CAAC;AAAA,IACH,CAAC;AAAA,IACD,cAAc,CAAC;AAAA,MACb,MAAM;AAAA,MACN,MAAM,CAAC;AAAA,QACL,WAAW;AAAA,MACb,CAAC;AAAA,IACH,CAAC;AAAA,IACD,iBAAiB,CAAC;AAAA,MAChB,MAAM;AAAA,MACN,MAAM,CAAC,kBAAkB;AAAA,IAC3B,CAAC;AAAA,IACD,gBAAgB,CAAC;AAAA,MACf,MAAM;AAAA,MACN,MAAM,CAAC,iBAAiB;AAAA,IAC1B,CAAC;AAAA,IACD,WAAW,CAAC;AAAA,MACV,MAAM;AAAA,MACN,MAAM,CAAC,YAAY;AAAA,IACrB,CAAC;AAAA,IACD,WAAW,CAAC;AAAA,MACV,MAAM;AAAA,MACN,MAAM,CAAC;AAAA,QACL,OAAO;AAAA,QACP,WAAW;AAAA,MACb,CAAC;AAAA,IACH,CAAC;AAAA,EACH,CAAC;AACH,GAAG;AACH,IAAM,6BAAN,MAAM,2BAA0B;AAAA,EAC9B,cAAc;AACZ,SAAK,aAAa,OAAO,oBAAoB;AAAA,MAC3C,UAAU;AAAA,IACZ,CAAC;AACD,SAAK,gBAAgB,OAAO,cAAc;AAAA,MACxC,UAAU;AAAA,IACZ,CAAC;AACD,SAAK,YAAY,OAAO,WAAW;AACnC,SAAK,QAAQ,SAAS,MAAM,KAAK,YAAY,MAAM,KAAK,KAAK,eAAe,MAAM,KAAK,QAAQ;AAC/F,QAAI,CAAC,KAAK;AAAY;AACtB,SAAK,WAAW,iBAAiB,KAAK,SAAS;AAAA,EACjD;AAAA,EACA,IAAI,MAAM,UAAU;AAClB,QAAI,CAAC,KAAK;AAAY;AACtB,SAAK,WAAW,cAAc,QAAQ;AAAA,EACxC;AAAA,EACA,IAAI,QAAQ,SAAS;AACnB,QAAI,CAAC,KAAK;AAAY;AACtB,SAAK,WAAW,WAAW,OAAO;AAAA,EACpC;AAkBF;AAhBI,2BAAK,OAAO,SAAS,kCAAkC,GAAG;AACxD,SAAO,KAAK,KAAK,4BAA2B;AAC9C;AAGA,2BAAK,OAAyB,kBAAkB;AAAA,EAC9C,MAAM;AAAA,EACN,WAAW,CAAC,CAAC,IAAI,oBAAoB,EAAE,CAAC;AAAA,EACxC,QAAQ;AAAA,IACN,OAAO;AAAA,IACP,SAAS;AAAA,EACX;AAAA,EACA,YAAY;AAAA,EACZ,UAAU,CAAI,mBAAmB,CAAC,oCAAoC,MAAM,0BAAyB,CAAC,CAAC,CAAC;AAC1G,CAAC;AApCL,IAAM,4BAAN;AAAA,CAuCC,MAAM;AACL,GAAC,OAAO,cAAc,eAAe,cAAiB,iBAAkB,2BAA2B,CAAC;AAAA,IAClG,MAAM;AAAA,IACN,MAAM,CAAC;AAAA,MACL,UAAU;AAAA,MACV,YAAY;AAAA,MACZ,WAAW,CAAC,oCAAoC,MAAM,yBAAyB,CAAC;AAAA,IAClF,CAAC;AAAA,EACH,CAAC,GAAG,MAAM,CAAC,GAAG;AAAA,IACZ,OAAO,CAAC;AAAA,MACN,MAAM;AAAA,IACR,CAAC;AAAA,IACD,SAAS,CAAC;AAAA,MACR,MAAM;AAAA,IACR,CAAC;AAAA,EACH,CAAC;AACH,GAAG;AACH,IAAM,iCAAN,MAAM,+BAA8B;AAAA,EAClC,cAAc;AACZ,SAAK,gBAAgB,OAAO,YAAY;AACxC,SAAK,MAAM,OAAO,0BAA0B,KAAK,eAAe,QAAQ,EAAE;AAC1E,WAAO,MAAM;AACX,WAAK,cAAc,mBAAmB,KAAK,IAAI,CAAC;AAAA,IAClD,CAAC;AAAA,EACH;AAmBF;AAjBI,+BAAK,OAAO,SAAS,sCAAsC,GAAG;AAC5D,SAAO,KAAK,KAAK,gCAA+B;AAClD;AAGA,+BAAK,OAAyB,kBAAkB;AAAA,EAC9C,MAAM;AAAA,EACN,WAAW,CAAC,CAAC,IAAI,wBAAwB,EAAE,CAAC;AAAA,EAC5C,UAAU;AAAA,EACV,cAAc,SAAS,2CAA2C,IAAI,KAAK;AACzE,QAAI,KAAK,GAAG;AACV,MAAG,eAAe,MAAM,IAAI,IAAI,CAAC;AAAA,IACnC;AAAA,EACF;AAAA,EACA,YAAY;AACd,CAAC;AAxBL,IAAM,gCAAN;AAAA,CA2BC,MAAM;AACL,GAAC,OAAO,cAAc,eAAe,cAAiB,iBAAkB,+BAA+B,CAAC;AAAA,IACtG,MAAM;AAAA,IACN,MAAM,CAAC;AAAA,MACL,UAAU;AAAA,MACV,YAAY;AAAA,MACZ,MAAM;AAAA,QACJ,QAAQ;AAAA,MACV;AAAA,IACF,CAAC;AAAA,EACH,CAAC,GAAG,MAAM,CAAC,GAAG,IAAI;AACpB,GAAG;AACH,IAAM,6BAAN,MAAM,2BAA0B;AAAA,EAC9B,cAAc;AACZ,SAAK,aAAa,OAAO,kBAAkB;AAAA,EAC7C;AAAA,EACA,IAAI,MAAM,UAAU;AAClB,SAAK,WAAW,gBAAgB,QAAQ;AAAA,EAC1C;AAAA,EACA,wBAAwB,UAAU;AAChC,SAAK,WAAW,gBAAgB,QAAQ;AAAA,EAC1C;AAsBF;AApBI,2BAAK,OAAO,SAAS,kCAAkC,GAAG;AACxD,SAAO,KAAK,KAAK,4BAA2B;AAC9C;AAGA,2BAAK,OAAyB,kBAAkB;AAAA,EAC9C,MAAM;AAAA,EACN,WAAW,CAAC,CAAC,oBAAoB,CAAC;AAAA,EAClC,QAAQ;AAAA,IACN,OAAO;AAAA,EACT;AAAA,EACA,YAAY;AAAA,EACZ,UAAU,CAAI,mBAAmB,CAAC,mCAAmC,MAAM,0BAAyB,CAAC,CAAC,GAAM,mBAAmB;AAAA,EAC/H,OAAO;AAAA,EACP,MAAM;AAAA,EACN,UAAU,SAAS,mCAAmC,IAAI,KAAK;AAAA,EAAC;AAAA,EAChE,eAAe;AAAA,EACf,iBAAiB;AACnB,CAAC;AA7BL,IAAM,4BAAN;AAAA,CAgCC,MAAM;AACL,GAAC,OAAO,cAAc,eAAe,cAAiB,iBAAkB,2BAA2B,CAAC;AAAA,IAClG,MAAM;AAAA,IACN,MAAM,CAAC;AAAA,MACL,UAAU;AAAA,MACV,YAAY;AAAA,MACZ,UAAU;AAAA,MACV,WAAW,CAAC,mCAAmC,MAAM,yBAAyB,CAAC;AAAA,MAC/E,iBAAiB,wBAAwB;AAAA,MACzC,eAAe,oBAAkB;AAAA,IACnC,CAAC;AAAA,EACH,CAAC,GAAG,MAAM;AAAA,IACR,OAAO,CAAC;AAAA,MACN,MAAM;AAAA,IACR,CAAC;AAAA,EACH,CAAC;AACH,GAAG;AACH,IAAM,2BAAN,MAAM,yBAAwB;AAAA,EAC5B,cAAc;AACZ,SAAK,gBAAgB,OAAO,YAAY;AACxC,SAAK,MAAM,OAAO,oBAAoB,KAAK,eAAe,QAAQ,EAAE;AACpE,WAAO,MAAM;AACX,WAAK,cAAc,kBAAkB,KAAK,IAAI,CAAC;AAAA,IACjD,CAAC;AAAA,EACH;AAmBF;AAjBI,yBAAK,OAAO,SAAS,gCAAgC,GAAG;AACtD,SAAO,KAAK,KAAK,0BAAyB;AAC5C;AAGA,yBAAK,OAAyB,kBAAkB;AAAA,EAC9C,MAAM;AAAA,EACN,WAAW,CAAC,CAAC,IAAI,kBAAkB,EAAE,CAAC;AAAA,EACtC,UAAU;AAAA,EACV,cAAc,SAAS,qCAAqC,IAAI,KAAK;AACnE,QAAI,KAAK,GAAG;AACV,MAAG,eAAe,MAAM,IAAI,IAAI,CAAC;AAAA,IACnC;AAAA,EACF;AAAA,EACA,YAAY;AACd,CAAC;AAxBL,IAAM,0BAAN;AAAA,CA2BC,MAAM;AACL,GAAC,OAAO,cAAc,eAAe,cAAiB,iBAAkB,yBAAyB,CAAC;AAAA,IAChG,MAAM;AAAA,IACN,MAAM,CAAC;AAAA,MACL,UAAU;AAAA,MACV,YAAY;AAAA,MACZ,MAAM;AAAA,QACJ,QAAQ;AAAA,MACV;AAAA,IACF,CAAC;AAAA,EACH,CAAC,GAAG,MAAM,CAAC,GAAG,IAAI;AACpB,GAAG;AACH,IAAI,aAAa;AACjB,IAAM,6BAAN,MAAM,2BAA0B;AAAA,EAC9B,cAAc;AACZ,SAAK,aAAa,OAAO,oBAAoB;AAAA,MAC3C,UAAU;AAAA,IACZ,CAAC;AACD,SAAK,gBAAgB,OAAO,cAAc;AAAA,MACxC,UAAU;AAAA,IACZ,CAAC;AACD,SAAK,KAAK,MAAM,sBAAsB,YAAY,EAAE;AACpD,SAAK,QAAQ,KAAK,eAAe,SAAS,OAAO,QAAQ;AACzD,SAAK,WAAW,cAAc,KAAK,eAAe,YAAY,YAAY;AAAA,EAC5E;AAAA,EACA,IAAI,oBAAoB,WAAW;AACjC,SAAK,aAAa;AAAA,EACpB;AAAA,EACA,OAAO;AACL,SAAK,YAAY,KAAK;AAAA,EACxB;AA+BF;AA7BI,2BAAK,OAAO,SAAS,kCAAkC,GAAG;AACxD,SAAO,KAAK,KAAK,4BAA2B;AAC9C;AAGA,2BAAK,OAAyB,kBAAkB;AAAA,EAC9C,MAAM;AAAA,EACN,WAAW,CAAC,CAAC,UAAU,oBAAoB,EAAE,GAAG,CAAC,UAAU,uBAAuB,EAAE,CAAC;AAAA,EACrF,WAAW,CAAC,iBAAiB,QAAQ;AAAA,EACrC,UAAU;AAAA,EACV,cAAc,SAAS,uCAAuC,IAAI,KAAK;AACrE,QAAI,KAAK,GAAG;AACV,MAAG,WAAW,SAAS,SAAS,qDAAqD;AACnF,eAAO,IAAI,KAAK;AAAA,MAClB,CAAC;AAAA,IACH;AACA,QAAI,KAAK,GAAG;AACV,MAAG,eAAe,MAAM,IAAI,GAAG,CAAC;AAChC,MAAG,YAAY,iBAAiB,IAAI,MAAM,MAAM,SAAS,SAAS,OAAO,EAAE,cAAc,IAAI,MAAM,CAAC,EAAE,iBAAiB,IAAI,QAAQ;AAAA,IACrI;AAAA,EACF;AAAA,EACA,QAAQ;AAAA,IACN,IAAI,CAAI,WAAa,aAAa,IAAI;AAAA,IACtC,qBAAqB;AAAA,EACvB;AAAA,EACA,UAAU,CAAC,kBAAkB;AAAA,EAC7B,YAAY;AACd,CAAC;AA9CL,IAAM,4BAAN;AAAA,CAiDC,MAAM;AACL,GAAC,OAAO,cAAc,eAAe,cAAiB,iBAAkB,2BAA2B,CAAC;AAAA,IAClG,MAAM;AAAA,IACN,MAAM,CAAC;AAAA,MACL,UAAU;AAAA,MACV,YAAY;AAAA,MACZ,MAAM;AAAA,QACJ,QAAQ;AAAA,QACR,WAAW;AAAA,QACX,iBAAiB;AAAA,QACjB,wBAAwB;AAAA,QACxB,qBAAqB;AAAA,QACrB,wBAAwB;AAAA,MAC1B;AAAA,MACA,UAAU;AAAA,IACZ,CAAC;AAAA,EACH,CAAC,GAAG,MAAM;AAAA,IACR,qBAAqB,CAAC;AAAA,MACpB,MAAM;AAAA,IACR,CAAC;AAAA,EACH,CAAC;AACH,GAAG;AACH,IAAM,mBAAmB,CAAC,oBAAoB,2BAA2B,2BAA2B,yBAAyB,2BAA2B,yBAAyB,6BAA6B;AAC9M,IAAM,mBAAN,MAAM,iBAAgB;AAgBtB;AAdI,iBAAK,OAAO,SAAS,wBAAwB,GAAG;AAC9C,SAAO,KAAK,KAAK,kBAAiB;AACpC;AAGA,iBAAK,OAAyB,iBAAiB;AAAA,EAC7C,MAAM;AAAA,EACN,SAAS,CAAC,oBAAoB,2BAA2B,2BAA2B,yBAAyB,2BAA2B,yBAAyB,6BAA6B;AAAA,EAC9L,SAAS,CAAC,oBAAoB,2BAA2B,2BAA2B,yBAAyB,2BAA2B,yBAAyB,6BAA6B;AAChM,CAAC;AAGD,iBAAK,OAAyB,iBAAiB,CAAC,CAAC;AAdrD,IAAM,kBAAN;AAAA,CAiBC,MAAM;AACL,GAAC,OAAO,cAAc,eAAe,cAAiB,iBAAkB,iBAAiB,CAAC;AAAA,IACxF,MAAM;AAAA,IACN,MAAM,CAAC;AAAA,MACL,SAAS,CAAC,GAAG,gBAAgB;AAAA,MAC7B,SAAS,CAAC,GAAG,gBAAgB;AAAA,IAC/B,CAAC;AAAA,EACH,CAAC,GAAG,MAAM,IAAI;AAChB,GAAG;",
  "names": ["cdkDialogRef"]
}
